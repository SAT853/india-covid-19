{"version":3,"sources":["assets/corona-logo.svg","redux/FetchGlobalData/FetchReducers.js","redux/FetchGlobalData/FetchActions.js","redux/FetchGlobalData/FetchTypes.js","redux/store.js","Components/Header.js","Components/Charts/PieChart.js","Constants.js","utils/format.js","Components/Loader.js","Components/ConfirmedCase.js","Components/DeathCase.js","Components/RecoveredCase.js","Components/CountryState.js","Components/GlobalCase.js","Components/TodayStatus.js","Components/Charts/TotalConfirmedChart.js","Components/Charts/DailyConfirmedChart.js","Components/Charts/GenderChart.js","Components/Charts/AgeChart.js","Components/Charts/DeepDive.js","Components/Row.js","Components/Table.js","Components/Legend.js","Components/Choropleth.js","Components/MapExplorer.js","Components/TimeSeries.js","utils/hooks.js","Components/IndianCase.js","Components/Symptoms.js","Components/NewsHighlights.js","Components/Footer.js","Components/ScrollButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","globalState","data","error","countryStateConfirmed","countryStateDeaths","countryStateRecovered","fetchGlobal","dispatch","axios","get","then","res","confirmed","value","deaths","recovered","lastUpdate","type","payload","fetchGlobalDataSuccess","catch","fetchGlobalDataFailed","message","fetchCountryConfirmed","map","item","countryRegion","fetchCountryConfimredSuccess","fetchCountryConfirmedFailed","fetchCountryDeaths","fetchCountryDeathsSuccess","fetchCountryDeathsFailed","fetchCountryRecovered","fetchCountryRecoveredSuccess","fetchCountryRecoveredFailed","root","combineReducers","state","store","createStore","applyMiddleware","thunk","Header","className","src","logo","alt","href","PieChart","props","parseInt","color","title","animate","animationDuration","animationEasing","cx","cy","label","labelPosition","style","height","labelStyle","fontFamily","fontSize","lengthAngle","lineWidth","onClick","undefined","onMouseOut","onMouseOver","paddingAngle","radius","rounded","startAngle","viewBoxSize","MAP_TYPES","MAPS_DIR","MAP_META","India","name","geoDataFile","mapType","graphObjectName","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","STATE_CODES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DD","DL","JK","LA","LD","PY","reverseStateCodes","Object","keys","key","index","stateCodes","push","code","months","formatDateIst","unformattedDate","day","slice","month","year","time","formatDateAbsolute","preprocessTimeseries","timeseries","today","Date","setHours","dataTypes","filter","d","every","dt","date","Number","getFullYear","validateCTS","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","totalactive","dailyactive","formatNumber","num","toString","replace","formatNumberSat","numberFormatter","Intl","NumberFormat","isNaN","format","parseStateTimeseries","states_daily","statewiseSeries","reduce","a","c","moment","i","isBefore","entries","forEach","k","v","stateCode","toLowerCase","prev","length","toDate","Loader","ConfirmedCase","caseData","id","DeathCase","fontWeight","RecoveredCase","connect","countryDataConfirmed","countryDataDeaths","countryDataRecovered","useState","toggel","settoggel","setconfirmed","setdeaths","setrecovered","useDispatch","useEffect","totalConfirmed","values","acc","cur","Math","floor","random","sort","b","totalDeaths","totalRecovered","globaldata","active","setactive","lastupdate","setlastupdate","activeCase","dateString","getDate","padStart","getMonth","getHours","getMinutes","getSeconds","formatDate","textTransform","parse","formatDistance","window","innerWidth","memo","todayCases","settodayCases","todayRecovered","settodayRecovered","setlastUpdate","dailyData","Container","Alert","variant","Heading","target","rel","Button","icon","faGoogle","TotalConfirmedChart","dates","deceased","defaults","global","elements","line","fill","defaultFontFamily","tooltips","intersect","mode","position","backgroundColor","displayColors","borderColor","borderWidth","titleFontColor","bodyFontColor","caretPadding","legend","display","hover","trim","dataset","labels","datasets","borderCapStyle","pointBackgroundColor","pointHoverRadius","options","responsive","events","maintainAspectRatio","usePointStyle","generateLabels","chart","pointStyle","point","tension","layout","padding","left","right","top","bottom","scales","yAxes","ticks","beginAtZero","max","precision","scaleLabel","labelString","xAxes","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","quarter","gridLines","min","callback","DailyConfirmedChart","barDataSet","reverse","stacked","GenderChart","male","female","unknown","patient","gender","chartData","chartOptions","callbacks","tooltipItem","datasetIndex","total","_meta","currentValue","parseFloat","toFixed","AgeChart","ages","agebracket","age","DeepDive","fetched","setFetched","rawData","setRawData","getStates","Promise","all","rawDataResponse","raw_data","console","log","animationDelay","Row","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","handleReveal","sortDistricts","useCallback","aDistricts","sorted","district1","district2","value1","value2","comparisonValue","handleSort","column","setItem","Fragment","onMouseEnter","onHighlightState","onMouseLeave","background","reveal","deltaconfirmed","Badge","deltarecovered","deltadeaths","colSpan","lastupdatedtime","e","district","delta","Unknown","Table","states","setStates","revealedStates","setRevealedStates","count","setCount","summary","s","stateDistrictWiseData","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","striped","bordered","districtData","onHighlightDistrict","ramp","n","canvas","document","createElement","context","width","getContext","fillStyle","fillRect","Legend","x","tickSize","marginTop","marginRight","marginBottom","marginLeft","tickFormat","tickValues","svg","d3","attr","tickAdjust","g","selectAll","interpolate","domain","range","copy","rangeRound","append","toDataURL","interpolator","assign","round","invertExtent","thresholds","quantiles","thresholdFormat","join","bandwidth","call","select","remove","text","node","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","isCountryLoaded","choroplethMap","useRef","choroplethLegend","svgRenderCount","setSvgRenderCount","ready","geoData","path","propertyField","current","topology","topojson","objects","projection","widthStyle","fitWidth","heightStyle","fitSize","bBox","bounds","split","svgLegend","colorScale","maxConfirmed","t","widthLegend","margin","barWidth","heightLegend","isInteger","onceTouchedRegion","features","properties","on","handleMouseover","stopPropagation","toTitleCase","err","str","charAt","toUpperCase","prevCount","classed","nodes","parentNode","appendChild","preserveAspectRatio","ref","getRegionFromState","region","MapExplorer","forwardRef","stateTestData","regionHighlighted","onMapHighlightChange","panelRegion","setPanelRegion","currentHoveredRegion","setCurrentHoveredRegion","testObj","setTestObj","currentMap","setCurrentMap","useMemo","currentMapData","districtWiseData","find","getRegionFromDistrict","newMap","switchMapToState","topDistrict","obj","totaltested","updatedon","source","Choropleth","TimeSeries","Infinity","lastDaysCount","setLastDaysCount","setTimeseries","datapoint","setDatapoint","setIndex","setMode","logMode","setLogMode","chartType","setChartType","moving","setMoving","svgRef1","svgRef2","svgRef3","svgRef4","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","observer","entry","contentRect","observe","unobserve","useResizeObserver","transformTimeSeries","slicedTimeseries","days","sliceTimeseriesFromEnd","graphData","chartRight","chartBottom","T","svg1","svg2","svg3","svg4","dateMin","setDate","dateMax","yScales","xScale","clamp","numTicksX","xAxis","yScale","yAxis","tickPadding","svgArray","plotTotal","dataTypesTotal","dataTypesDaily","colors","uniformScaleMin","yScaleUniformLinear","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","transition","duration","typeTotal","typeDaily","enter","getTotalLength","p","getPointAtLength","y","repeat","curve","mousemove","mouseout","xm","this","invert","bisectDate","f","j","focusDate","dateStr","isSame","subtract","chartKey1","chartKey2","chartKey3","chartKey4","currentStatusCount","currentDiff","formatedDiff","aria-label","IndianCase","timeseries1","setTimeseries1","setStateDistrictWiseData","setStateTestData","setRegionHighlighted","activeStateCode","setActiveStateCode","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","graphOption","setGraphOption","stateDistrictWiseResponse","statesDailyResponse","statewise","cases_time_series","testData","states_tested_data","totalTest","tested","updatetimestamp","totalindividualstested","ts","statecode","refs","htmlFor","checked","onChange","event","disabled","selectedState","selectedOptions","JSON","statedata","stringify","Symptoms","Accordion","defaultActiveKey","Card","Toggle","as","eventKey","Collapse","Body","initialState","articles","isLogged","NewsHighlights","setstate","idx","urlToImage","description","url","Footer","Nav","activeKey","ButtonGroup","faGithub","border","faTwitter","faLinkedin","ScrollButton","EasingType","ShowAtPosition","AnimationDuration","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.eaeed96c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corona-logo.56dde1ee.svg\";","import {\n  FETCH_GLOBAL_DATA_SUCCESS,\n  FETCH_GLOBAL_DATA_FAILED,\n  FETCH_COUNTRY_CONFIRMED_SUCCESS,\n  FETCH_COUNTRY_CONFIRMED_FAILED,\n  FETCH_COUNTRY_DEATHS_SUCCESS,\n  FETCH_COUNTRY_DEATHS_FAILED,\n  FETCH_COUNTRY_RECOVERED_SUCCESS,\n  FETCH_COUNTRY_RECOVERED_FAILED\n} from \"./FetchTypes\";\n\nimport {\n  fetchGlobalDataSuccess,\n  fetchGlobalDataFailed,\n  fetchCountryConfimredSuccess,\n  fetchCountryConfirmedFailed,\n  fetchCountryDeathsSuccess,\n  fetchCountryDeathsFailed,\n  fetchCountryRecoveredSuccess,\n  fetchCountryRecoveredFailed\n} from \"./FetchActions\";\n\nimport axios from \"axios\";\n\n// Global wise case state\nconst globalState = {\n  data: [],\n  error: \"\"\n};\n\nconst FetchGlobalDataReducers = (state = globalState, { type, payload }) => {\n  switch (type) {\n    case FETCH_GLOBAL_DATA_SUCCESS:\n      return {\n        ...state,\n        data: [...state.data, payload]\n      };\n    case FETCH_GLOBAL_DATA_FAILED:\n      return {\n        ...state,\n        data: [],\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Country wise case State\nconst countryStateConfirmed = {\n  data: [],\n  error: \"\"\n};\n\nconst FetchCountryConfirmedReducers = (\n  state = countryStateConfirmed,\n  { type, payload }\n) => {\n  switch (type) {\n    case FETCH_COUNTRY_CONFIRMED_SUCCESS:\n      return {\n        ...state,\n        data: payload\n      };\n    case FETCH_COUNTRY_CONFIRMED_FAILED:\n      return {\n        ...state,\n        data: [],\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst countryStateDeaths = {\n  data: [],\n  error: \"\"\n};\n\nconst FetchCountryDeathsReducers = (\n  state = countryStateDeaths,\n  { type, payload }\n) => {\n  switch (type) {\n    case FETCH_COUNTRY_DEATHS_SUCCESS:\n      return {\n        ...state,\n        data: payload\n      };\n    case FETCH_COUNTRY_DEATHS_FAILED:\n      return {\n        ...state,\n        data: [],\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst countryStateRecovered = {\n  data: [],\n  error: \"\"\n};\n\nconst FetchCountryRecoveredReducers = (\n  state = countryStateRecovered,\n  { type, payload }\n) => {\n  switch (type) {\n    case FETCH_COUNTRY_RECOVERED_SUCCESS:\n      return {\n        ...state,\n        data: payload\n      };\n    case FETCH_COUNTRY_RECOVERED_FAILED:\n      return {\n        ...state,\n        data: [],\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst fetchGlobal = () => {\n  return dispatch => {\n    axios\n      .get(\"https://covid19.mathdro.id/api\")\n      .then(res => {\n        const data = {\n          confirmed: res.data.confirmed.value,\n          deaths: res.data.deaths.value,\n          recovered: res.data.recovered.value,\n          lastUpdate: res.data.lastUpdate\n        };\n\n        dispatch(fetchGlobalDataSuccess(data));\n      })\n      .catch(error => {\n        dispatch(fetchGlobalDataFailed(error.message));\n      });\n  };\n};\n\nconst fetchCountryConfirmed = () => {\n  return dispatch => {\n    axios\n      .get(\"https://covid19.mathdro.id/api/confirmed\")\n      .then(res => {\n        const data = res.data.map(item => {\n          return {\n            countryRegion: item.countryRegion,\n            confirmed: item.confirmed\n          };\n        });\n        dispatch(fetchCountryConfimredSuccess(data));\n      })\n      .catch(error => {\n        dispatch(fetchCountryConfirmedFailed(error.message));\n      });\n  };\n};\n\nconst fetchCountryDeaths = () => {\n  return dispatch => {\n    axios\n      .get(\"https://covid19.mathdro.id/api/deaths\")\n      .then(res => {\n        const data = res.data.map(item => {\n          return {\n            countryRegion: item.countryRegion,\n            deaths: item.deaths\n          };\n        });\n        dispatch(fetchCountryDeathsSuccess(data));\n      })\n      .catch(error => {\n        dispatch(fetchCountryDeathsFailed(error.message));\n      });\n  };\n};\n\nconst fetchCountryRecovered = () => {\n  return dispatch => {\n    axios\n      .get(\"https://covid19.mathdro.id/api/recovered\")\n      .then(res => {\n        const data = res.data.map(item => {\n          return {\n            countryRegion: item.countryRegion,\n            recovered: item.recovered\n          };\n        });\n        dispatch(fetchCountryRecoveredSuccess(data));\n      })\n      .catch(error => {\n        dispatch(fetchCountryRecoveredFailed(error.message));\n      });\n  };\n};\n\nexport {\n  FetchGlobalDataReducers,\n  fetchGlobal,\n  FetchCountryConfirmedReducers,\n  fetchCountryConfirmed,\n  FetchCountryDeathsReducers,\n  fetchCountryDeaths,\n  FetchCountryRecoveredReducers,\n  fetchCountryRecovered\n};\n","import {\n  FETCH_GLOBAL_DATA_SUCCESS,\n  FETCH_GLOBAL_DATA_FAILED,\n  FETCH_COUNTRY_CONFIRMED_SUCCESS,\n  FETCH_COUNTRY_CONFIRMED_FAILED,\n  FETCH_COUNTRY_DEATHS_SUCCESS,\n  FETCH_COUNTRY_DEATHS_FAILED,\n  FETCH_COUNTRY_RECOVERED_SUCCESS,\n  FETCH_COUNTRY_RECOVERED_FAILED\n} from \"./FetchTypes\";\n\nconst fetchGlobalDataSuccess = data => {\n  return {\n    type: FETCH_GLOBAL_DATA_SUCCESS,\n    payload: data\n  };\n};\n\nconst fetchGlobalDataFailed = error => {\n  return {\n    type: FETCH_GLOBAL_DATA_FAILED,\n    payload: error\n  };\n};\n\nconst fetchCountryConfimredSuccess = data => {\n  return {\n    type: FETCH_COUNTRY_CONFIRMED_SUCCESS,\n    payload: data\n  };\n};\n\nconst fetchCountryConfirmedFailed = error => {\n  return {\n    type: FETCH_COUNTRY_CONFIRMED_FAILED,\n    payload: error\n  };\n};\n\nconst fetchCountryDeathsSuccess = data => {\n  return {\n    type: FETCH_COUNTRY_DEATHS_SUCCESS,\n    payload: data\n  };\n};\n\nconst fetchCountryDeathsFailed = error => {\n  return {\n    type: FETCH_COUNTRY_DEATHS_FAILED,\n    payload: error\n  };\n};\n\nconst fetchCountryRecoveredSuccess = data => {\n  return {\n    type: FETCH_COUNTRY_RECOVERED_SUCCESS,\n    payload: data\n  };\n};\n\nconst fetchCountryRecoveredFailed = error => {\n  return {\n    type: FETCH_COUNTRY_RECOVERED_FAILED,\n    payload: error\n  };\n};\n\nexport {\n  fetchGlobalDataSuccess,\n  fetchGlobalDataFailed,\n  fetchCountryConfimredSuccess,\n  fetchCountryConfirmedFailed,\n  fetchCountryDeathsSuccess,\n  fetchCountryDeathsFailed,\n  fetchCountryRecoveredSuccess,\n  fetchCountryRecoveredFailed\n};\n","export const [\n  FETCH_GLOBAL_DATA_SUCCESS,\n  FETCH_GLOBAL_DATA_FAILED,\n  FETCH_COUNTRY_CONFIRMED_SUCCESS,\n  FETCH_COUNTRY_CONFIRMED_FAILED,\n  FETCH_COUNTRY_DEATHS_SUCCESS,\n  FETCH_COUNTRY_DEATHS_FAILED,\n  FETCH_COUNTRY_RECOVERED_SUCCESS,\n  FETCH_COUNTRY_RECOVERED_FAILED\n] = [\n  \"FETCH_GLOBAL_DATA_SUCCESS\",\n  \"FETCH_GLOBAL_DATA_FAILED\",\n  \"FETCH_COUNTRY_CONFIRMED_SUCCESS\",\n  \"FETCH_COUNTRY_CONFIRMED_FAILED\",\n  \"FETCH_COUNTRY_DEATHS_SUCCESS\",\n  \"FETCH_COUNTRY_DEATHS_FAILED\",\n  \"FETCH_COUNTRY_RECOVERED_SUCCESS\",\n  \"FETCH_COUNTRY_RECOVERED_FAILED\"\n];\n","import {\n  FetchGlobalDataReducers,\n  FetchCountryConfirmedReducers,\n  FetchCountryDeathsReducers,\n  FetchCountryRecoveredReducers\n} from \"./FetchGlobalData/FetchReducers\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst root = combineReducers({\n  globalState: FetchGlobalDataReducers,\n  countryStateConfirmed: FetchCountryConfirmedReducers,\n  countryStateDeaths: FetchCountryDeathsReducers,\n  countryStateRecovered: FetchCountryRecoveredReducers\n});\n\nconst store = createStore(root, applyMiddleware(thunk));\n\nexport { store };\n","import React from \"react\";\nimport logo from \"../assets/corona-logo.svg\";\nconst Header = () => {\n  return (\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <h1>\n        Covid-19 Coronavirus Outbreak by{\" \"}\n        <a href=\"https://github.com/SAT853/india-covid-19\">SAT853</a>\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport ReactMinimalPieChart from \"react-minimal-pie-chart\";\n\nconst PieChart = (props) => {\n  const confirmed = parseInt(props.confirmed);\n  const deaths = parseInt(props.deaths);\n  const recovered = parseInt(props.recovered);\n  const active = confirmed - (deaths + recovered);\n  const data = [\n    {\n      color: \"#f94f4f\",\n      title: \"Confirmed Cases\",\n      value: confirmed,\n    },\n    {\n      color: \"black\",\n      title: \"Total Deaths\",\n      value: deaths,\n    },\n    {\n      color: \"green\",\n      title: \"Recovered\",\n      value: recovered,\n    },\n    {\n      color: \"#17a2b8\",\n      title: \"Active\",\n      value: active,\n    },\n  ];\n  return (\n    <ReactMinimalPieChart\n      className=\"test2\"\n      animate\n      animationDuration={1200}\n      animationEasing=\"ease-out\"\n      cx={50}\n      cy={50}\n      data={data}\n      label\n      labelPosition={60}\n      style={{ height: \"250px\" }}\n      labelStyle={{\n        fontFamily: \"Verdana\",\n        fontSize: \"5px\",\n      }}\n      lengthAngle={360}\n      lineWidth={15}\n      onClick={undefined}\n      onMouseOut={undefined}\n      onMouseOver={undefined}\n      paddingAngle={20}\n      radius={40}\n      rounded\n      startAngle={0}\n      viewBoxSize={[100, 100]}\n    />\n  );\n};\n\nexport default PieChart;\n","export const MAP_TYPES = {\n  COUNTRY: \"country\",\n  STATE: \"state\",\n};\n\nexport const MAPS_DIR = \"https://sat853.github.io/india-covid-19/maps\";\n\nexport const MAP_META = {\n  India: {\n    name: \"India\",\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: \"india\",\n  },\n  \"Andaman and Nicobar Islands\": {\n    name: \"Andaman and Nicobar Islands\",\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"andamannicobarislands_district\",\n  },\n  \"Arunachal Pradesh\": {\n    name: \"Arunachal Pradesh\",\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"arunachalpradesh_district\",\n  },\n  \"Andhra Pradesh\": {\n    name: \"Andhra Pradesh\",\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"andhrapradesh_district\",\n  },\n\n  Assam: {\n    name: \"Assam\",\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"assam_district\",\n  },\n  Bihar: {\n    name: \"Bihar\",\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"bihar_district\",\n  },\n  Chandigarh: {\n    name: \"Chandigarh\",\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"chandigarh_district\",\n  },\n  Chhattisgarh: {\n    name: \"Chhattisgarh\",\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"chhattisgarh_district\",\n  },\n  \"Dadra and Nagar Haveli\": {\n    name: \"Dadra and Nagar Haveli\",\n    geoDataFile: `${MAPS_DIR}/dadranagarhaveli.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"dadranagarhaveli_district\",\n  },\n  Delhi: {\n    name: \"Delhi\",\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"delhi_district\",\n  },\n  Karnataka: {\n    name: \"Karnataka\",\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"karnataka_district\",\n  },\n  Kerala: {\n    name: \"Kerala\",\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"kerala_district\",\n  },\n  Goa: {\n    name: \"Goa\",\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"goa_district\",\n  },\n  Gujarat: {\n    name: \"Gujarat\",\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"gujarat_district\",\n  },\n  Haryana: {\n    name: \"Haryana\",\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"haryana_district\",\n  },\n  \"Himachal Pradesh\": {\n    name: \"Himachal Pradesh\",\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"himachalpradesh_district\",\n  },\n  \"Jammu and Kashmir\": {\n    name: \"Jammu and Kashmir\",\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"jammukashmir_district\",\n  },\n  Jharkhand: {\n    name: \"Jharkhand\",\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"jharkhand_district\",\n  },\n  Ladakh: {\n    name: \"Ladakh\",\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"ladakh_district\",\n  },\n  Lakshadweep: {\n    name: \"Lakshadweep\",\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"lakshadweep_district\",\n  },\n  \"Madhya Pradesh\": {\n    name: \"Madhya Pradesh\",\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"madhyapradesh_district\",\n  },\n  Maharashtra: {\n    name: \"Maharashtra\",\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"maharashtra_district\",\n  },\n  Manipur: {\n    name: \"Manipur\",\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"manipur_district\",\n  },\n  Meghalaya: {\n    name: \"Meghalaya\",\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"meghalaya_district\",\n  },\n  Mizoram: {\n    name: \"Mizoram\",\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"mizoram_district\",\n  },\n  Nagaland: {\n    name: \"Nagaland\",\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"nagaland_district\",\n  },\n  Odisha: {\n    name: \"Odisha\",\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"odisha_district\",\n  },\n  Puducherry: {\n    name: \"Puducherry\",\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"puducherry_district\",\n  },\n  Punjab: {\n    name: \"Punjab\",\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"punjab_district\",\n  },\n  Rajasthan: {\n    name: \"Rajasthan\",\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"rajasthan_district\",\n  },\n  Sikkim: {\n    name: \"Sikkim\",\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"sikkim_district\",\n  },\n  \"Tamil Nadu\": {\n    name: \"Tamil Nadu\",\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"tamilnadu_district\",\n  },\n  Telangana: {\n    name: \"Telangana\",\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"telangana_district\",\n  },\n  Tripura: {\n    name: \"Tripura\",\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"tripura_district\",\n  },\n  Uttarakhand: {\n    name: \"Uttarakhand\",\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"uttarakhand_district\",\n  },\n  \"Uttar Pradesh\": {\n    name: \"Uttar Pradesh\",\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"uttarpradesh_district\",\n  },\n\n  \"West Bengal\": {\n    name: \"West Bengal\",\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: \"westbengal_district\",\n  },\n};\n\nexport const STATE_CODES = {\n  AP: \"Andhra Pradesh\",\n  AR: \"Arunachal Pradesh\",\n  AS: \"Assam\",\n  BR: \"Bihar\",\n  CT: \"Chhattisgarh\",\n  GA: \"Goa\",\n  GJ: \"Gujarat\",\n  HR: \"Haryana\",\n  HP: \"Himachal Pradesh\",\n  JH: \"Jharkhand\",\n  KA: \"Karnataka\",\n  KL: \"Kerala\",\n  MP: \"Madhya Pradesh\",\n  MH: \"Maharashtra\",\n  MN: \"Manipur\",\n  ML: \"Meghalaya\",\n  MZ: \"Mizoram\",\n  NL: \"Nagaland\",\n  OR: \"Odisha\",\n  PB: \"Punjab\",\n  RJ: \"Rajasthan\",\n  SK: \"Sikkim\",\n  TN: \"Tamil Nadu\",\n  TG: \"Telangana\",\n  TR: \"Tripura\",\n  UT: \"Uttarakhand\",\n  UP: \"Uttar Pradesh\",\n  WB: \"West Bengal\",\n  AN: \"Andaman and Nicobar Islands\",\n  CH: \"Chandigarh\",\n  DN: \"Dadra and Nagar Haveli\",\n  DD: \"Daman and Diu\",\n  DL: \"Delhi\",\n  JK: \"Jammu and Kashmir\",\n  LA: \"Ladakh\",\n  LD: \"Lakshadweep\",\n  PY: \"Puducherry\",\n};\n\nconst reverseStateCodes = {};\n\nObject.keys(STATE_CODES).map((key, index) => {\n  reverseStateCodes[STATE_CODES[key]] = key;\n  return null;\n});\nexport const STATE_CODES_REVERSE = reverseStateCodes;\n\nconst stateCodes = [];\nObject.keys(STATE_CODES).map((key, index) => {\n  stateCodes.push({ code: key, name: STATE_CODES[key] });\n  return null;\n});\nexport const STATE_CODES_ARRAY = stateCodes;\n\nexport const DISTRICTS_ARRAY = [\n  {\n    district: \"Nicobars\",\n    othernamesspellings: \"\",\n    state: \"Andaman and Nicobar Islands\",\n  },\n  {\n    district: \"North and Middle Andaman\",\n    othernamesspellings: \"\",\n    state: \"Andaman and Nicobar Islands\",\n  },\n  {\n    district: \"South Andaman\",\n    othernamesspellings: \"\",\n    state: \"Andaman and Nicobar Islands\",\n  },\n  {\n    district: \"Anantapur\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"Chittoor\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"East Godavari\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"Guntur\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"Krishna\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"Kurnool\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"Prakasam\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"S.P.S. Nellore\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"Srikakulam\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"Visakhapatnam\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"Vizianagaram\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"West Godavari\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"Y.S.R.\",\n    othernamesspellings: \"\",\n    state: \"Andhra Pradesh\",\n  },\n  {\n    district: \"Anjaw\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Changlang\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"East Kameng\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"East Siang\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Kamle\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Kra Daadi\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Kurung Kumey\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Lepa Rada\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Lohit\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Longding\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Lower Dibang Valley\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Lower Siang\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Lower Subansiri\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Namsai\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Pakke Kessang\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Papum Pare\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Shi Yomi\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Siang\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Tawang\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Tirap\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Upper Dibang Valley\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Upper Siang\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Upper Subansiri\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"West Kameng\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"West Siang\",\n    othernamesspellings: \"\",\n    state: \"Arunachal Pradesh\",\n  },\n  {\n    district: \"Baksa\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Barpeta\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Biswanath\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Bongaigaon\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Cachar\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Charaideo\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Chirang\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Darrang\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Dhemaji\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Dhubri\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Dibrugarh\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Dima Hasao\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Goalpara\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Golaghat\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Hailakandi\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Hojai\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Jorhat\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Kamrup\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Kamrup Metropolitan\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Karbi Anglong\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Karimganj\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Kokrajhar\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Lakhimpur\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Majuli\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Morigaon\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Nagaon\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Nalbari\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Sivasagar\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Sonitpur\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"South Salmara Mancachar\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Tinsukia\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Udalguri\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"West Karbi Anglong\",\n    othernamesspellings: \"\",\n    state: \"Assam\",\n  },\n  {\n    district: \"Araria\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Arwal\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Aurangabad\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Banka\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Begusarai\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Bhagalpur\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Bhojpur\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Buxar\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Darbhanga\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Gaya\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Gopalganj\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Jamui\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Jehanabad\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Kaimur Bhabua\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Katihar\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Khagaria\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Kishanganj\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Lakhisarai\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Madhepura\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Madhubani\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Munger\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Muzaffarpur\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Nalanda\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Nawada\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"West Champaran\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Patna\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"East Champaran\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Purnia\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Rohtas\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Saharsa\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Samastipur\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Saran\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Sheikhpura\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Sheohar\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Sitamarhi\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Siwan\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Supaul\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Vaishali\",\n    othernamesspellings: \"\",\n    state: \"Bihar\",\n  },\n  {\n    district: \"Chandigarh\",\n    othernamesspellings: \"\",\n    state: \"Chandigarh\",\n  },\n  {\n    district: \"Balod\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Baloda Bazar\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Balrampur\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Bametara\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Bastar\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Bijapur\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Bilaspur\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Dakshin Bastar Dantewada\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Dhamtari\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Durg\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Gariaband\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Janjgir Champa\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Jashpur\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Kabeerdham\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Kondagaon\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Korba\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Koriya\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Mahasamund\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Mungeli\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Narayanpur\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Raigarh\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Raipur\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Rajnandgaon\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Sukma\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Surajpur\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Surguja\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Uttar Bastar Kanker\",\n    othernamesspellings: \"\",\n    state: \"Chhattisgarh\",\n  },\n  {\n    district: \"Dadra and Nagar Haveli\",\n    othernamesspellings: \"\",\n    state: \"Dadra and Nagar Haveli\",\n  },\n  {\n    district: \"Daman\",\n    othernamesspellings: \"\",\n    state: \"Daman And Diu\",\n  },\n  {\n    district: \"Diu\",\n    othernamesspellings: \"\",\n    state: \"Daman And Diu\",\n  },\n  {\n    district: \"Central Delhi\",\n    othernamesspellings: \"\",\n    state: \"Delhi\",\n  },\n  {\n    district: \"East Delhi\",\n    othernamesspellings: \"\",\n    state: \"Delhi\",\n  },\n  {\n    district: \"New Delhi\",\n    othernamesspellings: \"\",\n    state: \"Delhi\",\n  },\n  {\n    district: \"North Delhi\",\n    othernamesspellings: \"\",\n    state: \"Delhi\",\n  },\n  {\n    district: \"North East Delhi\",\n    othernamesspellings: \"\",\n    state: \"Delhi\",\n  },\n  {\n    district: \"North West Delhi\",\n    othernamesspellings: \"\",\n    state: \"Delhi\",\n  },\n  {\n    district: \"Shahdara\",\n    othernamesspellings: \"\",\n    state: \"Delhi\",\n  },\n  {\n    district: \"South Delhi\",\n    othernamesspellings: \"\",\n    state: \"Delhi\",\n  },\n  {\n    district: \"South East Delhi\",\n    othernamesspellings: \"\",\n    state: \"Delhi\",\n  },\n  {\n    district: \"South West Delhi\",\n    othernamesspellings: \"\",\n    state: \"Delhi\",\n  },\n  {\n    district: \"West Delhi\",\n    othernamesspellings: \"\",\n    state: \"Delhi\",\n  },\n  {\n    district: \"North Goa\",\n    othernamesspellings: \"\",\n    state: \"Goa\",\n  },\n  {\n    district: \"South Goa\",\n    othernamesspellings: \"\",\n    state: \"Goa\",\n  },\n  {\n    district: \"Ahmadabad\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Amreli\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Anand\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Aravalli\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Banas Kantha\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Bharuch\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Bhavnagar\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Botad\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Chota Udaipur\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Devbhumi Dwarka\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Dohad\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Gandhinagar\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Gir Somnath\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Jamnagar\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Junagadh\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Kachchh\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Kheda\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Mahesana\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Mahisagar\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Morbi\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Narmada\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Navsari\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Panch Mahals\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Patan\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Porbandar\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Rajkot\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Sabar Kantha\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Surat\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Surendranagar\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Tapi\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"The Dangs\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Vadodara\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Valsad\",\n    othernamesspellings: \"\",\n    state: \"Gujarat\",\n  },\n  {\n    district: \"Ambala\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Bhiwani\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Charki Dadri\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Faridabad\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Fatehabad\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Gurugram\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Hisar\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Jhajjar\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Jind\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Kaithal\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Karnal\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Kurukshetra\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Mahendragarh\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Nuh\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Palwal\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Panchkula\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Panipat\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Rewari\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Rohtak\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Sirsa\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Sonipat\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Yamunanagar\",\n    othernamesspellings: \"\",\n    state: \"Haryana\",\n  },\n  {\n    district: \"Bilaspur\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Chamba\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Hamirpur\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Kangra\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Kinnaur\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Kullu\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Lahul and Spiti\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Mandi\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Shimla\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Sirmaur\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Solan\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Una\",\n    othernamesspellings: \"\",\n    state: \"Himachal Pradesh\",\n  },\n  {\n    district: \"Anantnag\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Badgam\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Bandipore\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Baramula\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Doda\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Ganderbal\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Jammu\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Kathua\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Kishtwar\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Kulgam\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Kupwara\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Mirpur\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Muzaffarabad\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Pulwama\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Punch\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Rajouri\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Ramban\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Reasi\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Samba\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Shupiyan\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Srinagar\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Udhampur\",\n    othernamesspellings: \"\",\n    state: \"Jammu and Kashmir\",\n  },\n  {\n    district: \"Bokaro\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Chatra\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Deoghar\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Dhanbad\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Dumka\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Garhwa\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Giridih\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Godda\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Gumla\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Hazaribagh\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Jamtara\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Khunti\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Kodarma\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Latehar\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Lohardaga\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Pakur\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Palamu\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Pashchimi Singhbhum\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Purbi Singhbhum\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Ramgarh\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Ranchi\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Sahibganj\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Saraikela-Kharsawan\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Simdega\",\n    othernamesspellings: \"\",\n    state: \"Jharkhand\",\n  },\n  {\n    district: \"Bagalkote\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Ballari\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Belagavi\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Bengaluru\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Bengaluru Rural\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Bidar\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Chamarajanagara\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Chikkaballapura\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Chikkamagaluru\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Chitradurga\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Dakshina Kannada\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Davanagere\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Dharwad\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Gadag\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Hassan\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Haveri\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Kalaburagi\",\n    othernamesspellings: \"Gulbarga\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Kodagu\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Kolar\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Koppal\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Mandya\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Mysuru\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Raichur\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Ramanagara\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Shivamogga\",\n    othernamesspellings: \"Shimoga\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Tumakuru\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Udupi\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Uttara Kannada\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Vijayapura\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Yadgir\",\n    othernamesspellings: \"\",\n    state: \"Karnataka\",\n  },\n  {\n    district: \"Alappuzha\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Ernakulam\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Idukki\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Kannur\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Kasaragod\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Kollam\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Kottayam\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Kozhikode\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Malappuram\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Palakkad\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Pathanamthitta\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Thiruvananthapuram\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Thrissur\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Wayanad\",\n    othernamesspellings: \"\",\n    state: \"Kerala\",\n  },\n  {\n    district: \"Kargil\",\n    othernamesspellings: \"\",\n    state: \"Ladakh\",\n  },\n  {\n    district: \"Leh\",\n    othernamesspellings: \"\",\n    state: \"Ladakh\",\n  },\n  {\n    district: \"Lakshadweep\",\n    othernamesspellings: \"\",\n    state: \"Lakshadweep\",\n  },\n  {\n    district: \"Agar Malwa\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Alirajpur\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Anuppur\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Ashoknagar\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Balaghat\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Barwani\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Betul\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Bhind\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Bhopal\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Burhanpur\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Chhatarpur\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Chhindwara\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Damoh\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Datia\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Dewas\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Dhar\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Dindori\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Khandwa\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Guna\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Gwalior\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Harda\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Hoshangabad\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Indore\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Jabalpur\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Jhabua\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Katni\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Mandla\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Mandsaur\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Morena\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Narsimhapur\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Neemuch\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Niwari\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Panna\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Raisen\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Rajgarh\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Ratlam\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Rewa\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Sagar\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Satna\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Sehore\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Seoni\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Shahdol\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Shajapur\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Sheopur\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Shivpuri\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Sidhi\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Singrauli\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Tikamgarh\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Ujjain\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Umaria\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Vidisha\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Khargone\",\n    othernamesspellings: \"\",\n    state: \"Madhya Pradesh\",\n  },\n  {\n    district: \"Ahmadnagar\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Akola\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Amravati\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Aurangabad\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Bhandara\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Bid\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Buldana\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Chandrapur\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Dhule\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Gadchiroli\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Gondiya\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Hingoli\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Jalgaon\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Jalna\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Kolhapur\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Latur\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Mumbai\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Mumbai Suburban\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Nagpur\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Nanded\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Nandurbar\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Nashik\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Osmanabad\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Palghar\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Parbhani\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Pune\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Raigarh\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Ratnagiri\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Sangli\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Satara\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Sindhudurg\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Solapur\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Thane\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Wardha\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Washim\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Yavatmal\",\n    othernamesspellings: \"\",\n    state: \"Maharashtra\",\n  },\n  {\n    district: \"Bishnupur\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Chandel\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Churachandpur\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Imphal East\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Imphal West\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Jiribam\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Kakching\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Kamjong\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Kangpokpi\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Noney\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Pherzawl\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Senapati\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Tamenglong\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Tengnoupal\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Thoubal\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"Ukhrul\",\n    othernamesspellings: \"\",\n    state: \"Manipur\",\n  },\n  {\n    district: \"East Garo Hills\",\n    othernamesspellings: \"\",\n    state: \"Meghalaya\",\n  },\n  {\n    district: \"East Jaintia Hills\",\n    othernamesspellings: \"\",\n    state: \"Meghalaya\",\n  },\n  {\n    district: \"East Khasi Hills\",\n    othernamesspellings: \"\",\n    state: \"Meghalaya\",\n  },\n  {\n    district: \"North Garo Hills\",\n    othernamesspellings: \"\",\n    state: \"Meghalaya\",\n  },\n  {\n    district: \"Ribhoi\",\n    othernamesspellings: \"\",\n    state: \"Meghalaya\",\n  },\n  {\n    district: \"South Garo Hills\",\n    othernamesspellings: \"\",\n    state: \"Meghalaya\",\n  },\n  {\n    district: \"South West Garo Hills\",\n    othernamesspellings: \"\",\n    state: \"Meghalaya\",\n  },\n  {\n    district: \"South West Khasi Hills\",\n    othernamesspellings: \"\",\n    state: \"Meghalaya\",\n  },\n  {\n    district: \"West Garo Hills\",\n    othernamesspellings: \"\",\n    state: \"Meghalaya\",\n  },\n  {\n    district: \"West Jaintia Hills\",\n    othernamesspellings: \"\",\n    state: \"Meghalaya\",\n  },\n  {\n    district: \"West Khasi Hills\",\n    othernamesspellings: \"\",\n    state: \"Meghalaya\",\n  },\n  {\n    district: \"Aizawl\",\n    othernamesspellings: \"\",\n    state: \"Mizoram\",\n  },\n  {\n    district: \"Champhai\",\n    othernamesspellings: \"\",\n    state: \"Mizoram\",\n  },\n  {\n    district: \"Kolasib\",\n    othernamesspellings: \"\",\n    state: \"Mizoram\",\n  },\n  {\n    district: \"Lawngtlai\",\n    othernamesspellings: \"\",\n    state: \"Mizoram\",\n  },\n  {\n    district: \"Lunglei\",\n    othernamesspellings: \"\",\n    state: \"Mizoram\",\n  },\n  {\n    district: \"Mamit\",\n    othernamesspellings: \"\",\n    state: \"Mizoram\",\n  },\n  {\n    district: \"Saiha\",\n    othernamesspellings: \"\",\n    state: \"Mizoram\",\n  },\n  {\n    district: \"Serchhip\",\n    othernamesspellings: \"\",\n    state: \"Mizoram\",\n  },\n  {\n    district: \"Dimapur\",\n    othernamesspellings: \"\",\n    state: \"Nagaland\",\n  },\n  {\n    district: \"Kiphire\",\n    othernamesspellings: \"\",\n    state: \"Nagaland\",\n  },\n  {\n    district: \"Kohima\",\n    othernamesspellings: \"\",\n    state: \"Nagaland\",\n  },\n  {\n    district: \"Longleng\",\n    othernamesspellings: \"\",\n    state: \"Nagaland\",\n  },\n  {\n    district: \"Mokokchung\",\n    othernamesspellings: \"\",\n    state: \"Nagaland\",\n  },\n  {\n    district: \"Mon\",\n    othernamesspellings: \"\",\n    state: \"Nagaland\",\n  },\n  {\n    district: \"Peren\",\n    othernamesspellings: \"\",\n    state: \"Nagaland\",\n  },\n  {\n    district: \"Phek\",\n    othernamesspellings: \"\",\n    state: \"Nagaland\",\n  },\n  {\n    district: \"Tuensang\",\n    othernamesspellings: \"\",\n    state: \"Nagaland\",\n  },\n  {\n    district: \"Wokha\",\n    othernamesspellings: \"\",\n    state: \"Nagaland\",\n  },\n  {\n    district: \"Zunheboto\",\n    othernamesspellings: \"\",\n    state: \"Nagaland\",\n  },\n  {\n    district: \"Anugul\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Balangir\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Baleshwar\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Bargarh\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Baudh\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Bhadrak\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Cuttack\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Debagarh\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Dhenkanal\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Gajapati\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Ganjam\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Jagatsinghapur\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Jajapur\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Jharsuguda\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Kalahandi\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Kandhamal\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Kendrapara\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Kendujhar\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Khordha\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Koraput\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Malkangiri\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Mayurbhanj\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Nabarangapur\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Nayagarh\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Nuapada\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Puri\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Rayagada\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Sambalpur\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Subarnapur\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Sundargarh\",\n    othernamesspellings: \"\",\n    state: \"Odisha\",\n  },\n  {\n    district: \"Karaikal\",\n    othernamesspellings: \"\",\n    state: \"Puducherry\",\n  },\n  {\n    district: \"Mahe\",\n    othernamesspellings: \"\",\n    state: \"Puducherry\",\n  },\n  {\n    district: \"Puducherry\",\n    othernamesspellings: \"\",\n    state: \"Puducherry\",\n  },\n  {\n    district: \"Yanam\",\n    othernamesspellings: \"\",\n    state: \"Puducherry\",\n  },\n  {\n    district: \"Amritsar\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Barnala\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Bathinda\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Faridkot\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Fatehgarh Sahib\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Fazilka\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Firozpur\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Gurdaspur\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Hoshiarpur\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Jalandhar\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Kapurthala\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Ludhiana\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Mansa\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Moga\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Pathankot\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Patiala\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Rupnagar\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"S.A.S. Nagar\",\n    othernamesspellings: \"Mohali\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Sangrur\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Shahid Bhagat Singh Nagar\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Sri Muktsar Sahib\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Tarn Taran\",\n    othernamesspellings: \"\",\n    state: \"Punjab\",\n  },\n  {\n    district: \"Ajmer\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Alwar\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Banswara\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Baran\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Barmer\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Bharatpur\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Bhilwara\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Bikaner\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Bundi\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Chittaurgarh\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Churu\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Dausa\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Dhaulpur\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Dungarpur\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Ganganagar\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Hanumangarh\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Jaipur\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Jaisalmer\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Jalore\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Jhalawar\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Jhunjhunu\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Jodhpur\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Karauli\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Kota\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Nagaur\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Pali\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Pratapgarh\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Rajsamand\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Sawai Madhopur\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Sikar\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Sirohi\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Tonk\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"Udaipur\",\n    othernamesspellings: \"\",\n    state: \"Rajasthan\",\n  },\n  {\n    district: \"East District\",\n    othernamesspellings: \"\",\n    state: \"Sikkim\",\n  },\n  {\n    district: \"North District\",\n    othernamesspellings: \"\",\n    state: \"Sikkim\",\n  },\n  {\n    district: \"South District\",\n    othernamesspellings: \"\",\n    state: \"Sikkim\",\n  },\n  {\n    district: \"West District\",\n    othernamesspellings: \"\",\n    state: \"Sikkim\",\n  },\n  {\n    district: \"Ariyalur\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Chennai\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Coimbatore\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Cuddalore\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Dharmapuri\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Dindigul\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Erode\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Kancheepuram\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Kanniyakumari\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Karur\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Krishnagiri\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Madurai\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Nagapattinam\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Namakkal\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Perambalur\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Pudukkottai\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Ramanathapuram\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Salem\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Sivaganga\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Thanjavur\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"The Nilgiris\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Theni\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Thiruvallur\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Thiruvarur\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Thoothukkudi\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Tiruchirappalli\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Tirunelveli\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Tiruppur\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Tiruvannamalai\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Vellore\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Viluppuram\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Virudhunagar\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Adilabad\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Bhadradri Kothagudem\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Hyderabad\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Jagitial\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Jangoan\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Jayashankar\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Jogulamba Gadwal\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Kamareddy\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Karimnagar\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Khammam\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Kumuram Bheem Asifabad\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Mahabubabad\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Mahabubnagar\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Mancherial\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Medak\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Medchal Malkajgiri\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Mulugu\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Nagarkurnool\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Nalgonda\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Narayanpet\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Nirmal\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Nizamabad\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Peddapalli\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Rajanna Sircilla\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Ranga Reddy\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Sangareddy\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Siddipet\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Suryapet\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Vikarabad\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Wanaparthy\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Warangal Rural\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Warangal Urban\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Yadadri Bhuvanagiri\",\n    othernamesspellings: \"\",\n    state: \"Telangana\",\n  },\n  {\n    district: \"Dhalai\",\n    othernamesspellings: \"\",\n    state: \"Tripura\",\n  },\n  {\n    district: \"Gomati\",\n    othernamesspellings: \"\",\n    state: \"Tripura\",\n  },\n  {\n    district: \"Khowai\",\n    othernamesspellings: \"\",\n    state: \"Tripura\",\n  },\n  {\n    district: \"North Tripura\",\n    othernamesspellings: \"\",\n    state: \"Tripura\",\n  },\n  {\n    district: \"Sipahijala\",\n    othernamesspellings: \"\",\n    state: \"Tripura\",\n  },\n  {\n    district: \"South Tripura\",\n    othernamesspellings: \"\",\n    state: \"Tripura\",\n  },\n  {\n    district: \"Unokoti\",\n    othernamesspellings: \"\",\n    state: \"Tripura\",\n  },\n  {\n    district: \"West Tripura\",\n    othernamesspellings: \"\",\n    state: \"Tripura\",\n  },\n  {\n    district: \"Agra\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Aligarh\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Ambedkar Nagar\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Amethi\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Amroha\",\n    othernamesspellings: \"Jyotiba Phule Nagar\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Auraiya\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Azamgarh\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Baghpat\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Bahraich\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Ballia\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Balrampur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Banda\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Bara Banki\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Bareilly\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Basti\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Bhadohi\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Bijnor\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Budaun\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Bulandshahr\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Chandauli\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Chitrakoot\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Deoria\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Etah\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Etawah\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Faizabad\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Farrukhabad\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Fatehpur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Firozabad\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Gautam Buddha Nagar\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Ghaziabad\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Ghazipur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Gonda\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Gorakhpur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Hamirpur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Hapur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Hardoi\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Hathras\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Jalaun\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Jaunpur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Jhansi\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Kannauj\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Kanpur Dehat\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Kanpur Nagar\",\n    othernamesspellings: \"Kanpur city\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Kasganj\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Kaushambi\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Kheri\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Kushinagar\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Lalitpur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Lucknow\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Mahoba\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Mahrajganj\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Mainpuri\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Mathura\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Mau\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Meerut\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Mirzapur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Moradabad\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Muzaffarnagar\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Pilibhit\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Pratapgarh\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Prayagraj\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Rae Bareli\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Rampur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Saharanpur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Sambhal\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Sant Kabir Nagar\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Shahjahanpur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Shamli\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Shrawasti\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Siddharthnagar\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Sitapur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Sonbhadra\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Sultanpur\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Unnao\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Varanasi\",\n    othernamesspellings: \"\",\n    state: \"Uttar Pradesh\",\n  },\n  {\n    district: \"Almora\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Bageshwar\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Chamoli\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Champawat\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Dehradun\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Haridwar\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Nainital\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Pauri Garhwal\",\n    othernamesspellings: \"Pauri or just Garhwal\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Pithoragarh\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Rudraprayag\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Tehri Garhwal\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Udham Singh Nagar\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Uttarkashi\",\n    othernamesspellings: \"\",\n    state: \"Uttarakhand\",\n  },\n  {\n    district: \"Alipurduar\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Bankura\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Birbhum\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Cooch Behar\",\n    othernamesspellings: \"Coochbehar\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Dakshin Dinajpur\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Darjeeling\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Hooghly\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Howrah\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Jalpaiguri\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Jhargram\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Kalimpong\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Kolkata\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Maldah\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Medinipur West\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Murshidabad\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Nadia\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"North 24 Parganas\",\n    othernamesspellings: \"24 paraganas north\\r\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Paschim Bardhaman\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Purba Bardhaman\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Medinipur East\",\n    othernamesspellings: \"Purba Medinipur\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Purulia\",\n    othernamesspellings: \"puruliya\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"South 24 Parganas\",\n    othernamesspellings: \"24 south parganas\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"Uttar Dinajpur\",\n    othernamesspellings: \"\",\n    state: \"West Bengal\",\n  },\n  {\n    district: \"\",\n    othernamesspellings: \"\",\n    state: \"Mizoram\",\n  },\n  {\n    district: \"\",\n    othernamesspellings: \"\",\n    state: \"Mizoram\",\n  },\n  {\n    district: \"\",\n    othernamesspellings: \"\",\n    state: \"Mizoram\",\n  },\n  {\n    district: \"Tenkasi\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Chengalpattu\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Ranipet\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Kallakurichi\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n  {\n    district: \"Tirupathur\",\n    othernamesspellings: \"\",\n    state: \"Tamil Nadu\",\n  },\n];\n","import { STATE_CODES } from \"../Constants\";\nimport moment from \"moment\";\n\nconst months = {\n  \"01\": \"Jan\",\n  \"02\": \"Feb\",\n  \"03\": \"Mar\",\n  \"04\": \"Apr\",\n  \"05\": \"May\",\n  \"06\": \"Jun\",\n  \"07\": \"Jul\",\n  \"08\": \"Aug\",\n  \"09\": \"Sep\",\n  \"10\": \"Oct\",\n  \"11\": \"Nov\",\n  \"12\": \"Dec\",\n};\n\nexport const getStateName = (code) => {\n  return STATE_CODES[code.toUpperCase()];\n};\n\n// Formate Date\nexport const formatDate = (dateString) => {\n  const dt = new Date(dateString);\n  return `${dt.getDate().toString().padStart(2, \"0\")}/${(dt.getMonth() + 1)\n    .toString()\n    .padStart(2, \"0\")}/${dt\n    .getFullYear()\n    .toString()\n    .padStart(4, \"0\")} ${dt\n    .getHours()\n    .toString()\n    .padStart(2, \"0\")}:${dt\n    .getMinutes()\n    .toString()\n    .padStart(2, \"0\")}:${dt.getSeconds().toString().padStart(2, \"0\")}`;\n};\n\nexport const formatDateIst = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n};\n\nconst validateCTS = (data = []) => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dataTypes = [\n    \"dailyconfirmed\",\n    \"dailydeceased\",\n    \"dailyrecovered\",\n    \"totalconfirmed\",\n    \"totaldeceased\",\n    \"totalrecovered\",\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      const year = today.getFullYear();\n      return new Date(d.date + year) < today;\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat, index) => ({\n    date: new Date(stat.date + \" 2020\"),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n    // Active = Confimed - Recovered - Deceased\n    totalactive:\n      +stat.totalconfirmed - +stat.totalrecovered - +stat.totaldeceased,\n    dailyactive:\n      +stat.dailyconfirmed - +stat.dailyrecovered - +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\n\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\n// Formate Number\nexport const formatNumber = (num) => {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n};\n\nexport const formatNumberSat = (value) => {\n  const numberFormatter = new Intl.NumberFormat(\"en-IN\");\n  return isNaN(value) ? \"-\" : numberFormatter.format(value);\n};\n\nexport const parseStateTimeseries = ({ states_daily: data }) => {\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = moment();\n  for (let i = 0; i < data.length; i += 3) {\n    const date = moment(data[i].date, \"DD-MMM-YY\");\n    // Skip data from the current day\n    if (date.isBefore(today, \"Date\")) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        // Parser\n        const dailyconfirmed = +data[i][stateCode] || 0;\n        const dailyrecovered = +data[i + 1][stateCode] || 0;\n        const dailydeceased = +data[i + 2][stateCode] || 0;\n        const totalconfirmed = +data[i][stateCode] + (prev.totalconfirmed || 0);\n        const totalrecovered =\n          +data[i + 1][stateCode] + (prev.totalrecovered || 0);\n        const totaldeceased =\n          +data[i + 2][stateCode] + (prev.totaldeceased || 0);\n        // Push\n        v.push({\n          date: date.toDate(),\n          dailyconfirmed: dailyconfirmed,\n          dailyrecovered: dailyrecovered,\n          dailydeceased: dailydeceased,\n          totalconfirmed: totalconfirmed,\n          totalrecovered: totalrecovered,\n          totaldeceased: totaldeceased,\n          // Active = Confimed - Recovered - Deceased\n          totalactive: totalconfirmed - totalrecovered - totaldeceased,\n          dailyactive: dailyconfirmed - dailyrecovered - dailydeceased,\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};\n\n// Merged duplicate object with same id-value inside an array\nexport const getCurrentStats = (confirmed, deaths, recovered) => {\n  // [confirmed, deaths, recovered].includes().replace(\",\", \"\");\n  confirmed.replace(\",\", \"\");\n  deaths.replace(\",\", \"\");\n  recovered.replace(\",\", \"\");\n  const active = confirmed - (deaths - recovered);\n  return [\n    {\n      color: \"#ffc107\",\n      title: \"Confirmed Cases\",\n      value: confirmed,\n    },\n    {\n      color: \"#dc3545\",\n      title: \"Deaths\",\n      value: deaths,\n    },\n    {\n      color: \"#6c757d\",\n      title: \"cured\",\n      value: recovered,\n    },\n    {\n      color: \"#17a2b8\",\n      title: \"active\",\n      value: active,\n    },\n  ];\n};\n","import React from \"react\";\nimport \"./Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { formatNumber } from \"../utils/format\";\nconst ConfirmedCase = ({ caseData }) => {\n  return (\n    <section className=\"data-confirmed\">\n      <h3>Total Confirmed</h3>\n      <ul>\n        {caseData.map((data) => {\n          return (\n            <li key={data.id}>\n              <p className=\"confirmed\">{formatNumber(data.confirmed)}</p>\n              <span>{data.countryRegion}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default ConfirmedCase;\n","import React from \"react\";\nimport { formatNumber } from \"../utils/format\";\n\nconst DeathCase = ({ caseData }) => {\n  return (\n    <section className=\"data-confirmed\">\n      <h3>Deaths</h3>\n      <ul>\n        {caseData.map((data) => {\n          return (\n            data.deaths !== 0 && (\n              <li key={data.id}>\n                <p style={{ fontWeight: 600 }}>\n                  {formatNumber(data.deaths)}{\" \"}\n                  <span style={{ fontWeight: 500 }}>Deaths</span>\n                </p>\n                <span>{data.countryRegion}</span>\n              </li>\n            )\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default DeathCase;\n","import React from \"react\";\nimport { formatNumber } from \"../utils/format\";\n\nconst RecoveredCase = ({ caseData }) => {\n  return (\n    <section className=\"data-confirmed\">\n      <h3>Recovered</h3>\n      <ul>\n        {caseData.map((data) => {\n          return (\n            data.recovered !== 0 && (\n              <li key={data.id}>\n                <p style={{ color: \"green\" }}>\n                  {formatNumber(data.recovered)} <span>Recovered</span>\n                </p>\n                <span>{data.countryRegion}</span>\n              </li>\n            )\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default RecoveredCase;\n","import React, { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport {\n  fetchCountryConfirmed,\n  fetchCountryDeaths,\n  fetchCountryRecovered,\n} from \"../redux/FetchGlobalData/FetchReducers\";\nimport ConfirmedCase from \"./ConfirmedCase\";\nimport DeathCase from \"./DeathCase\";\nimport RecoveredCase from \"./RecoveredCase\";\n\nconst CountryState = (props) => {\n  const [toggel, settoggel] = useState(false);\n  const [confirmed, setconfirmed] = useState([]);\n  const [deaths, setdeaths] = useState([]);\n  const [recovered, setrecovered] = useState([]);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCountryConfirmed());\n    dispatch(fetchCountryDeaths());\n    dispatch(fetchCountryRecovered());\n    return () => {\n      dispatch(fetchCountryConfirmed());\n      dispatch(fetchCountryDeaths());\n      dispatch(fetchCountryRecovered());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    const totalConfirmed = Object.values(\n      props.countryDataConfirmed.reduce(\n        (acc, cur) => ({\n          ...acc,\n          [cur.countryRegion]: {\n            countryRegion: cur.countryRegion,\n            confirmed:\n              cur.confirmed +\n              (acc[cur.countryRegion] ? acc[cur.countryRegion].confirmed : 0),\n            id: Math.floor(Math.random() * 1000000),\n          },\n        }),\n        {}\n      )\n    ).sort((a, b) => {\n      return b.confirmed - a.confirmed;\n    });\n    const totalDeaths = Object.values(\n      props.countryDataDeaths.reduce(\n        (acc, cur) => ({\n          ...acc,\n          [cur.countryRegion]: {\n            countryRegion: cur.countryRegion,\n            deaths:\n              cur.deaths +\n              (acc[cur.countryRegion] ? acc[cur.countryRegion].deaths : 0),\n            id: Math.floor(Math.random() * 1000000),\n          },\n        }),\n        {}\n      )\n    ).sort((a, b) => {\n      return b.deaths - a.deaths;\n    });\n    const totalRecovered = Object.values(\n      props.countryDataRecovered.reduce(\n        (acc, cur) => ({\n          ...acc,\n          [cur.countryRegion]: {\n            countryRegion: cur.countryRegion,\n            recovered:\n              cur.recovered +\n              (acc[cur.countryRegion] ? acc[cur.countryRegion].recovered : 0),\n            id: Math.floor(Math.random() * 1000000),\n          },\n        }),\n        {}\n      )\n    ).sort((a, b) => {\n      return b.confirmed - a.confirmed;\n    });\n\n    setconfirmed(totalConfirmed);\n    setdeaths(totalDeaths);\n    setrecovered(totalRecovered);\n    return () => {};\n  }, [\n    props.countryDataConfirmed,\n    props.countryDataDeaths,\n    props.countryDataRecovered,\n  ]);\n\n  return (\n    <>\n      <button\n        className=\"btn btn-outline-primary m-1 mb-2 \"\n        onClick={() => settoggel(!toggel)}\n      >\n        {!toggel ? \"View Country Wise Report\" : \"Hide Details\"}\n      </button>\n      {toggel ? (\n        <>\n          <h4 className=\"data-header\">Data by Country/Region/Sovereignty</h4>\n          <div className=\"flex-container fadeInUp\">\n            {confirmed.length !== 0 && (\n              <>\n                <ConfirmedCase caseData={confirmed} />\n                <DeathCase caseData={deaths} />\n                <RecoveredCase caseData={recovered} />\n              </>\n            )}\n          </div>\n        </>\n      ) : null}\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    countryDataConfirmed: state.countryStateConfirmed.data,\n    countryDataDeaths: state.countryStateDeaths.data,\n    countryDataRecovered: state.countryStateRecovered.data,\n  };\n};\n\nexport default connect(mapStateToProps, null)(CountryState);\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, connect } from \"react-redux\";\nimport { fetchGlobal } from \"../redux/FetchGlobalData/FetchReducers\";\nimport PieChart from \"./Charts/PieChart\";\nimport {\n  formatNumber,\n  formatDateIst,\n  formatDateAbsolute,\n  formatDate,\n} from \"../utils/format\";\nimport { formatDistance } from \"date-fns\";\nimport Loader from \"./Loader\";\nimport CountryState from \"./CountryState\";\nconst GlobalCase = (props) => {\n  const [confirmed, setconfirmed] = useState(null);\n  const [deaths, setdeaths] = useState(null);\n  const [recovered, setrecovered] = useState(null);\n  const [active, setactive] = useState(null);\n  const [lastupdate, setlastupdate] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchGlobal());\n\n    return () => {\n      dispatch(fetchGlobal());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    props.globaldata.map((item) => {\n      const activeCase = formatNumber(\n        parseInt(item.confirmed) -\n          (parseInt(item.recovered) + parseInt(item.deaths))\n      );\n      return (\n        setconfirmed(item.confirmed),\n        setdeaths(item.deaths),\n        setrecovered(item.recovered),\n        setlastupdate(formatDate(item.lastUpdate)),\n        setactive(activeCase)\n      );\n    });\n    return () => {};\n  }, [props.globaldata]);\n\n  return (\n    <>\n      {!confirmed ? (\n        <Loader />\n      ) : (\n        <section className=\"center-text fadeInUp\">\n          <div className=\"global-case center-text\">\n            <h2 className=\"title\">Overall Global Case</h2>\n            <span className=\"data-time\" style={{ textTransform: \"uppercase\" }}>\n              Last Updated:{\" \"}\n              {isNaN(Date.parse(formatDateIst(lastupdate)))\n                ? \"\"\n                : formatDateAbsolute(lastupdate)}\n              {\" - \"}\n              {formatDistance(new Date(formatDateIst(lastupdate)), new Date()) +\n                \" Ago\"}\n            </span>\n          </div>\n          <div className=\"piechart-container\">\n            <div className=\"pie-chart\">\n              <PieChart\n                confirmed={confirmed}\n                deaths={deaths}\n                recovered={recovered}\n              />\n              <div className=\"piechart-info\">\n                <p className=\"btn confirmed \">Confirmed</p>\n                <p className=\"btn deaths\">Deaths</p>\n                <p className=\"btn recovered\">Recovered</p>\n                <p className=\"btn active\">Active</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"data-container\">\n            <div className=\"global-data confirmed\">\n              <div>\n                <h4>\n                  {window.innerWidth < 485 ? \"Confirmed\" : \"Total Confirmed\"}\n                </h4>\n                <h2 style={{ color: \"red\" }}>{formatNumber(confirmed)}</h2>\n              </div>\n            </div>\n            <div className=\"global-data\">\n              <div>\n                <h4>Active Cases</h4>\n                <h2 style={{ color: \"#17a2b8\" }}>{active}</h2>\n              </div>\n            </div>\n            <div className=\"global-data deaths\">\n              <div>\n                <h4> Deaths</h4>\n                <h2>{formatNumber(deaths)}</h2>\n              </div>\n            </div>\n            <div className=\"global-data recovered\">\n              <div>\n                <h4>Recovered</h4>\n                <h2 style={{ color: \"green\" }}>{formatNumber(recovered)}</h2>\n              </div>\n            </div>\n          </div>\n          <CountryState />\n        </section>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    globaldata: state.globalState.data,\n  };\n};\n\nexport default connect(mapStateToProps, null)(GlobalCase);\n","import React, { useState, useEffect, memo } from \"react\";\nimport { Alert, Button, Container } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\n\nconst TodayStatus = (props) => {\n  const [todayCases, settodayCases] = useState(null);\n  const [todayRecovered, settodayRecovered] = useState(null);\n  const [lastUpdate, setlastUpdate] = useState(null);\n\n  useEffect(() => {\n    settodayCases(props.dailyData[0].todayCases);\n    setlastUpdate(props.dailyData[0].lastupdate);\n    settodayRecovered(props.dailyData[0].todayRecovered);\n    return () => {};\n  }, [props.dailyData]);\n\n  return (\n    todayCases && (\n      <Container className=\"today-alert\">\n        <Alert variant=\"info\">\n          <Alert.Heading>Today's COVID-19 Report</Alert.Heading>\n          <div>\n            <p>\n              As per Datasource Lastupdate: <strong>{lastUpdate}</strong>. In\n              India, total reported corona cases today is{\" \"}\n              <strong>{todayCases}</strong> total recovered cases today is{\" \"}\n              <strong>{todayRecovered}</strong>. Fighting COVID-19 is need of\n              the hour. Donate to{\" \"}\n              <a\n                href=\"https://pib.gov.in/PressReleseDetailm.aspx?PRID=1608851\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                PM Relief{\" \"}\n              </a>{\" \"}\n              Fund now and make a difference.\n            </p>\n            <div className=\"google-pay\">\n              <Button href={\"https://gpay.app.goo.gl/277dRg\"} variant=\"primary\">\n                <FontAwesomeIcon icon={faGoogle} /> Donate Now\n              </Button>\n            </div>\n          </div>\n        </Alert>\n      </Container>\n    )\n  );\n};\n\nexport default memo(TodayStatus);\n","import React from \"react\";\nimport { Line, defaults } from \"react-chartjs-2\";\nimport moment from \"moment\";\n\nconst TotalConfirmedChart = (props) => {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.defaultFontFamily = \"Baloo Tamma 2\";\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = \"nearest\";\n  defaults.global.tooltips.position = \"average\";\n  defaults.global.tooltips.backgroundColor = \"rgba(255, 255, 255, 0.6)\";\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = \"#c62828\";\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = \"#000\";\n  defaults.global.tooltips.bodyFontColor = \"#000\";\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = \"nearest\";\n  defaults.global.tooltips.position = \"nearest\";\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = \"bottom\";\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      dates.push(moment(data.date.trim(), \"DD MMM\"));\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: [\n      {\n        borderWidth: 2,\n        data: confirmed,\n        borderCapStyle: \"round\",\n        pointBackgroundColor: \"rgba(249, 79, 79, 1.2)\",\n        label: \"Confirmed\",\n        borderColor: \"rgba(249, 79, 79, 1.2)\",\n        pointHoverRadius: 4,\n      },\n      {\n        borderWidth: 2,\n        data: recovered,\n        borderCapStyle: \"round\",\n        pointBackgroundColor: \"green\",\n        label: \"Recovered\",\n        borderColor: \"green\",\n        pointHoverRadius: 4,\n      },\n      {\n        borderWidth: 2,\n        data: deceased,\n        borderCapStyle: \"round\",\n        pointBackgroundColor: \"black\",\n        label: \"Deaths\",\n        borderColor: \"black\",\n        pointHoverRadius: 4,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    events: [\n      \"click\",\n      \"mousemove\",\n      \"mouseout\",\n      \"touchstart\",\n      \"touchmove\",\n      \"touchend\",\n    ],\n    maintainAspectRatio: false,\n    legend: {\n      display: true,\n      labels: {\n        usePointStyle: true,\n        generateLabels: (chart) => {\n          const labels = defaults.global.legend.labels.generateLabels(chart);\n          labels.forEach((label) => {\n            label.pointStyle = \"rectRounded\";\n          });\n          return labels;\n        },\n      },\n    },\n    tooltips: {\n      mode: \"index\",\n    },\n    elements: {\n      point: {\n        radius: 1,\n      },\n      line: {\n        tension: 0.2,\n      },\n    },\n    layout: {\n      padding: {\n        left: 10,\n        right: 10,\n        top: 0,\n        bottom: 10,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: \"linear\",\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: \"Total Cases\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            unit: \"day\",\n            tooltipFormat: \"MMM DD\",\n            stepSize: 1,\n            displayFormats: {\n              millisecond: \"MMM DD\",\n              second: \"MMM DD\",\n              minute: \"MMM DD\",\n              hour: \"MMM DD\",\n              day: \"MMM DD\",\n              week: \"MMM DD\",\n              month: \"MMM DD\",\n              quarter: \"MMM DD\",\n              year: \"MMM DD\",\n            },\n          },\n          gridLines: {\n            color: \"rgba(0, 0, 0, 0)\",\n          },\n        },\n      ],\n    },\n  };\n\n  if (props.mode) {\n    options.scales.yAxes = [\n      {\n        type: \"logarithmic\",\n        ticks: {\n          min: 0,\n          max: 10000,\n          callback: function (value, index, values) {\n            if (value === 10000) return \"10000\";\n            if (value === 2000) return \"2500\";\n            if (value === 500) return \"500\";\n            if (value === 100) return \"100\";\n            if (value === 20) return \"25\";\n            if (value === 5) return \"5\";\n            if (value === 0) return \"0\";\n            return null;\n          },\n        },\n        scaleLabel: {\n          display: false,\n          labelString: \"Total Cases\",\n        },\n      },\n    ];\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default TotalConfirmedChart;\n","import React from \"react\";\nimport { Bar, defaults } from \"react-chartjs-2\";\nimport moment from \"moment\";\n\nconst DailyConfirmedChart = (props) => {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = \"nearest\";\n  defaults.global.tooltips.position = \"average\";\n  defaults.global.tooltips.backgroundColor = \"rgba(255, 255, 255, 0.6)\";\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = \"#c62828\";\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = \"#000\";\n  defaults.global.tooltips.bodyFontColor = \"#000\";\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = \"nearest\";\n  defaults.global.tooltips.position = \"nearest\";\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = \"bottom\";\n  defaults.global.legend.labels.usePointStyle = true;\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      dates.push(moment(data.date.trim(), \"DD MMM\").format(\"DD MMM\"));\n      confirmed.push(data.dailyconfirmed);\n      recovered.push(data.dailyrecovered);\n      deceased.push(data.dailydeceased);\n    }\n  });\n\n  const barDataSet = {\n    labels: dates,\n    datasets: [\n      {\n        data: recovered,\n        label: \"Recovered\",\n        backgroundColor: \"#28a745\",\n      },\n\n      {\n        data: deceased,\n        label: \"Deaths\",\n        backgroundColor: \"black\",\n      },\n      {\n        data: confirmed,\n        label: \"Confirmed\",\n        backgroundColor: \"rgba(249, 79, 79, 1.2)\",\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: \"index\",\n    },\n    events: [\"mousemove\", \"mouseout\", \"touchstart\", \"touchmove\", \"touchend\"],\n    maintainAspectRatio: false,\n    legend: {\n      display: true,\n      reverse: true,\n      labels: {\n        usePointStyle: true,\n        generateLabels: (chart) => {\n          const labels = defaults.global.legend.labels.generateLabels(chart);\n          labels.forEach((label) => {\n            label.pointStyle = \"rectRounded\";\n          });\n          return labels;\n        },\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: \"rgba(0, 0, 0, 0)\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Bar data={barDataSet} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default DailyConfirmedChart;\n","import React from \"react\";\nimport { Doughnut, defaults } from \"react-chartjs-2\";\n\nconst GenderChart = (props) => {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = \"nearest\";\n  defaults.global.tooltips.position = \"average\";\n  defaults.global.tooltips.backgroundColor = \"rgba(255, 255, 255, 0.8)\";\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = \"#c62828\";\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = \"#000\";\n  defaults.global.tooltips.bodyFontColor = \"#000\";\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = \"nearest\";\n  defaults.global.tooltips.position = \"nearest\";\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = \"bottom\";\n  defaults.global.hover.intersect = false;\n\n  let male = 0;\n  let female = 0;\n  let unknown = 0;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.gender === \"M\") {\n      male++;\n    } else if (patient.gender === \"F\") {\n      female++;\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: [male, female, unknown],\n        backgroundColor: [\"#20c997\", \"#dc3545\", \"#6c757d\"],\n        label: \"Hola\",\n      },\n    ],\n    labels: [\"Male\", \"Female\", \"Awaiting Details\"],\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    events: [\"mousemove\", \"mouseout\", \"touchstart\", \"touchmove\", \"touchend\"],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"point\",\n      position: \"nearest\",\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + \" (\" + percentage + \"%)\";\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n    </div>\n  );\n};\n\nexport default GenderChart;\n","import React from \"react\";\nimport { Bar, defaults } from \"react-chartjs-2\";\n\nconst AgeChart = (props) => {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = \"nearest\";\n  defaults.global.tooltips.position = \"average\";\n  defaults.global.tooltips.backgroundColor = \"rgba(255, 255, 255, 0.8)\";\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = \"#c62828\";\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = \"#000\";\n  defaults.global.tooltips.bodyFontColor = \"#000\";\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = \"nearest\";\n  defaults.global.tooltips.position = \"nearest\";\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = \"bottom\";\n\n  defaults.global.hover.intersect = false;\n\n  const ages = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  let unknown = 0;\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.agebracket) {\n      const age = parseInt(patient.agebracket);\n      if (age >= 0 && age <= 10) {\n        ages[0]++;\n      }\n      if (age > 10 && age <= 20) {\n        ages[1]++;\n      }\n      if (age > 20 && age <= 30) {\n        ages[2]++;\n      }\n      if (age > 30 && age <= 40) {\n        ages[3]++;\n      }\n      if (age > 40 && age <= 50) {\n        ages[4]++;\n      }\n      if (age > 50 && age <= 60) {\n        ages[5]++;\n      }\n      if (age > 60 && age <= 70) {\n        ages[6]++;\n      }\n      if (age > 70 && age <= 80) {\n        ages[7]++;\n      }\n      if (age > 80 && age <= 90) {\n        ages[8]++;\n      }\n      if (age > 90 && age <= 100) {\n        ages[9]++;\n      }\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    labels: [\n      \"0-10\",\n      \"11-20\",\n      \"21-30\",\n      \"31-40\",\n      \"41-50\",\n      \"51-60\",\n      \"61-70\",\n      \"71-80\",\n      \"81-90\",\n      \"91-100\",\n    ],\n    datasets: [\n      {\n        data: ages,\n        label: \"Cases\",\n        backgroundColor: \"rgb(249, 79, 79)\",\n      },\n    ],\n  };\n\n  const chartOptions = {\n    events: [\"mousemove\", \"mouseout\", \"touchstart\", \"touchmove\", \"touchend\"],\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 0,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: \"rgba(0, 0, 0, 0)\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\n    </div>\n  );\n};\n\nexport default AgeChart;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport GenderChart from \"./GenderChart\";\nimport AgeChart from \"./AgeChart\";\n\nconst DeepDive = (props) => {\n  const [fetched, setFetched] = useState(false);\n  const [rawData, setRawData] = useState([]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [rawDataResponse] = await Promise.all([\n        axios.get(\"https://api.covid19india.org/raw_data.json\"),\n      ]);\n\n      setRawData(rawDataResponse.data.raw_data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <>\n      <div className=\"card fadeInUp\" style={{ animationDelay: \"0.7s\" }}>\n        <GenderChart title=\"Patient Gender\" data={rawData} />\n      </div>\n      <div className=\"card fadeInUp\" style={{ animationDelay: \"0.7s\" }}>\n        <AgeChart title=\"Patient Age\" data={rawData} />\n      </div>\n    </>\n  );\n};\n\nexport default DeepDive;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport * as Icon from \"react-feather\";\nimport {\n  formatDateIst,\n  formatDateAbsolute,\n  formatNumberSat,\n} from \"../utils/format\";\nimport { formatDistance } from \"date-fns\";\nimport { Badge } from \"react-bootstrap\";\n\nconst Row = (props) => {\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem(\"district.sortColumn\")\n      ? localStorage.getItem(\"district.sortColumn\")\n      : \"confirmed\",\n    isAscending: localStorage.getItem(\"district.isAscending\")\n      ? localStorage.getItem(\"district.isAscending\") === \"true\"\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === \"district\"\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === \"district\"\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === \"district\";\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem(\"district.sortColumn\", column);\n    localStorage.setItem(\"district.isAscending\", isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={props.total ? \"state is-total\" : \"state\"}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        onClick={!props.total ? handleReveal : null}\n        style={{ background: props.index % 2 === 0 ? \"#f8f9fa\" : \"\" }}\n      >\n        <td style={{ fontWeight: 600 }}>\n          <div className=\"table__title-wrapper\">\n            <span\n              className={`dropdown ${\n                props.reveal ? \"rotateRightDown\" : \"rotateDownRight\"\n              }`}\n              style={{ display: !props.total ? \"\" : \"none\" }}\n              onClick={() => {\n                handleReveal();\n              }}\n            >\n              <Icon.ChevronDown />\n            </span>\n            {state.state}\n          </div>\n        </td>\n        <td>\n          <span className=\"deltas\" style={{ color: \"#ff073a\" }}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : \"\"}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.confirmed) === 0 ? (\n              \"-\"\n            ) : (\n              <Badge variant=\"warning\">\n                {formatNumberSat(state.confirmed)}\n              </Badge>\n            )}\n          </span>\n        </td>\n        <td\n          style={{\n            color: parseInt(state.active) === 0 ? \"#B5B5B5\" : \"inherit\",\n          }}\n        >\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\n          </span>*/}\n          {parseInt(state.active) === 0 ? (\n            \"-\"\n          ) : (\n            <Badge variant=\"success\">{formatNumberSat(state.active)}</Badge>\n          )}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? \"#B5B5B5\" : \"inherit\",\n          }}\n        >\n          <span className=\"deltas\" style={{ color: \"#28a745\" }}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : \"\"}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.recovered) === 0 ? (\n              \"-\"\n            ) : (\n              <Badge variant=\"dark\">{formatNumberSat(state.recovered)}</Badge>\n            )}\n          </span>\n        </td>\n        <td\n          style={{\n            color: parseInt(state.deaths) === 0 ? \"black\" : \"inherit\",\n          }}\n        >\n          <span className=\"deltas\" style={{ color: \"black\" }}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : \"\"}\n          </span>\n          <span className=\"table__count-text\" style={{ color: \"black\" }}>\n            {parseInt(state.deaths) === 0 ? (\n              \"-\"\n            ) : (\n              <Badge variant=\"danger\"> {formatNumberSat(state.deaths)}</Badge>\n            )}\n          </span>\n        </td>\n      </tr>\n\n      <tr\n        className={\"state-last-update\"}\n        style={{ display: props.reveal && !props.total ? \"\" : \"none\" }}\n      >\n        <td colSpan={4}>\n          <div className=\"last-update\">\n            <h6>Last updated&nbsp;</h6>\n            <h6\n              title={\n                isNaN(Date.parse(formatDateIst(props.state.lastupdatedtime)))\n                  ? \"\"\n                  : formatDateAbsolute(props.state.lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDateIst(props.state.lastupdatedtime)))\n                ? \"\"\n                : `${formatDistance(\n                    new Date(formatDateIst(props.state.lastupdatedtime)),\n                    new Date()\n                  )} ago`}\n            </h6>\n          </div>\n        </td>\n      </tr>\n\n      <tr\n        className={`district-heading`}\n        style={{ display: props.reveal && !props.total ? \"\" : \"none\" }}\n      >\n        <td onClick={(e) => handleSort(\"district\")}>\n          <div className=\"heading-content\">\n            <abbr title=\"District\">District</abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === \"district\" ? \"initial\" : \"none\",\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td onClick={(e) => handleSort(\"confirmed\")}>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? \"is-cherry\" : \"\"}`}\n              title=\"Confirmed\"\n            >\n              {window.innerWidth <= 769\n                ? window.innerWidth <= 375\n                  ? \"C\"\n                  : \"Cnfmd\"\n                : \"Confirmed\"}\n            </abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === \"confirmed\" ? \"initial\" : \"none\",\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? \"is-cherry\" : \"\"}`}\n              title=\"Active\"\n            >\n              {window.innerWidth <= 375 ? \"Act\" : \"Active\"}\n            </abbr>\n          </div>\n        </td>\n        <td>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? \"is-cherry\" : \"\"}`}\n              title=\"Recovered\"\n            >\n          {window.innerWidth <= 769\n                          ? window.innerWidth <= 375\n                            ? \"R\"\n                            : \"Rcvrd\"\n                          : \"Recovered\"}\n            </abbr>\n          </div>\n        </td>\n        <td>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? \"is-cherry\" : \"\"}`}\n              title=\"Deaths\"\n            >\n              Deaths\n            </abbr>\n          </div>\n        </td>\n      </tr>\n\n      \n\n      {sortedDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== \"unknown\")\n          .map((district, index) => {\n            if (district.toLowerCase() !== \"unknown\") {\n              return (\n              \n                <tr\n                  key={index}\n                  className={`district district-data`}\n                  style={{\n                    display: props.reveal && !props.total ? \"\" : \"none\",\n                    background: index % 2 === 0 ? \"#f8f9fa\" : \"\",\n                  }}\n                >\n                  <td>{district}</td>\n                  <td>\n                    <span className=\"deltas\" style={{ color: \"#ff073a\" }}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : \"\"}\n                    </span>\n\n                    <span className=\"table__count-text\">\n                      {formatNumberSat(sortedDistricts[district].confirmed)}\n                    </span>\n                  </td>\n                  <td>\n                    <span className=\"deltas\" style={{ color: \"17A2BB\" }}>\n                      {sortedDistricts[district].delta.active > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.active > 0\n                        ? `${sortedDistricts[district].delta.active}`\n                        : \"\"}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumberSat(sortedDistricts[district].active)}\n                    </span>\n                  </td>\n                  <td>\n                    <span className=\"deltas\" style={{ color: \"rgb(40, 167, 69)\" }}>\n                      {sortedDistricts[district].delta.recovered > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.recovered > 0\n                        ? `${sortedDistricts[district].delta.recovered}`\n                        : \"\"}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumberSat(sortedDistricts[district].recovered)}\n                    </span>\n                  </td>\n                  <td>\n                    <span className=\"deltas\" style={{ color: \"black\" }}>\n                      {sortedDistricts[district].delta.deceased > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.deceased > 0\n                        ? `${sortedDistricts[district].delta.deceased}`\n                        : \"\"}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumberSat(sortedDistricts[district].deceased)}\n                    </span>\n                  </td>\n                </tr>\n               \n               \n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && (\n        <React.Fragment>\n          <tr\n            className={`district`}\n            style={{ display: props.reveal && !props.total ? \"\" : \"none\" }}\n          >\n            <td style={{ fontWeight: 600 }}>\n              Unknown{\" \"}\n              <span style={{ fontSize: \"0.75rem\", color: \"#201aa299\" }}>#</span>\n            </td>\n            <td>\n              <span className=\"deltas\" style={{ color: \"#ff073a\" }}>\n                {sortedDistricts[\"Unknown\"].delta.confirmed > 0 && (\n                  <Icon.ArrowUp />\n                )}\n                {sortedDistricts[\"Unknown\"].delta.confirmed > 0\n                  ? `${sortedDistricts[\"Unknown\"].delta.confirmed}`\n                  : \"\"}\n              </span>\n              <span className=\"table__count-text\">\n                {formatNumberSat(sortedDistricts[\"Unknown\"].confirmed)}\n              </span>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n            <tr\n        className={\"state-last-update\"}\n        style={{ display: props.reveal && !props.total ? \"\" : \"none\" }}\n      >\n        <td colSpan={5}>\n          <div className=\"last-update\">\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  );\n};\n\nexport default Row;\n","import React, { useState, useEffect } from \"react\";\nimport { Table as Table1 } from \"react-bootstrap\";\n\nimport Row from \"./Row\";\n\nconst Table = (props) => {\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [toggel, settoggel] = useState(false);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem(\"state.sortColumn\")\n      ? localStorage.getItem(\"state.sortColumn\")\n      : \"confirmed\",\n    isAscending: localStorage.getItem(\"state.isAscending\")\n      ? localStorage.getItem(\"state.isAscending\") === \"true\"\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return { ...a, [state.state]: false };\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== \"state\") {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1[\"state\"] > StateData2[\"state\"]\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1[\"state\"] > StateData2[\"state\"]\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector(\"abbr\")\n      .getAttribute(\"title\")\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === \"state\";\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem(\"state.sortColumn\", currentsortColumn);\n    localStorage.setItem(\"state.isAscending\", isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  if (states.length > 0) {\n    return (\n      <>\n        <button\n          className=\"btn btn-outline-primary m-2\"\n          onClick={() => settoggel(!toggel)}\n        >\n          {!toggel ? \"View State/Distric Wise Report\" : \"Hide Details\"}\n        </button>\n        {toggel ? (\n          <React.Fragment>\n            <Table1\n              striped\n              bordered\n              hover\n              variant=\"light\"\n              className=\"table fadeInUp\"\n              style={{ animationDelay: \"1.8s\" }}\n            >\n              <thead>\n                <tr>\n                  <th\n                    className=\"sticky state-heading\"\n                    onClick={(e) => handleSort(e, props)}\n                  >\n                    <div className=\"heading-content\">\n                      <abbr title=\"State\">State/UT</abbr>\n                      <div\n                        style={{\n                          display:\n                            sortData.sortColumn === \"state\"\n                              ? \"initial\"\n                              : \"none\",\n                        }}\n                      >\n                        {sortData.isAscending ? (\n                          <div className=\"arrow-up\" />\n                        ) : (\n                          <div className=\"arrow-down\" />\n                        )}\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                    <div className=\"heading-content\">\n                      <abbr\n                        className={`${\n                          window.innerWidth <= 769 ? \"is-cherry\" : \"\"\n                        }`}\n                        title=\"Confirmed\"\n                      >\n                        {window.innerWidth <= 769\n                          ? window.innerWidth <= 375\n                            ? \"C\"\n                            : \"Cnfmd\"\n                          : \"Confirmed\"}\n                      </abbr>\n                      <div\n                        style={{\n                          display:\n                            sortData.sortColumn === \"confirmed\"\n                              ? \"initial\"\n                              : \"none\",\n                        }}\n                      >\n                        {sortData.isAscending ? (\n                          <div className=\"arrow-up\" />\n                        ) : (\n                          <div className=\"arrow-down\" />\n                        )}\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                    <div className=\"heading-content\">\n                      <abbr\n                        className={`${\n                          window.innerWidth <= 769 ? \"is-blue\" : \"\"\n                        }`}\n                        title=\"Active\"\n                      >\n                        {window.innerWidth <= 769\n                          ? window.innerWidth <= 375\n                            ? \"A\"\n                            : \"Actv\"\n                          : \"Active\"}\n                      </abbr>\n                      <div\n                        style={{\n                          display:\n                            sortData.sortColumn === \"active\"\n                              ? \"initial\"\n                              : \"none\",\n                        }}\n                      >\n                        {sortData.isAscending ? (\n                          <div className=\"arrow-up\" />\n                        ) : (\n                          <div className=\"arrow-down\" />\n                        )}\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                    <div className=\"heading-content\">\n                      <abbr\n                        className={`${\n                          window.innerWidth <= 769 ? \"is-green\" : \"\"\n                        }`}\n                        title=\"Recovered\"\n                      >\n                        {window.innerWidth <= 769\n                          ? window.innerWidth <= 375\n                            ? \"R\"\n                            : \"Rcvrd\"\n                          : \"Recovered\"}\n                      </abbr>\n                      <div\n                        className={\n                          sortData.sortColumn === \"recovered\"\n                            ? \"sort-black\"\n                            : \"\"\n                        }\n                      ></div>\n                      <div\n                        style={{\n                          display:\n                            sortData.sortColumn === \"recovered\"\n                              ? \"initial\"\n                              : \"none\",\n                        }}\n                      >\n                        {sortData.isAscending ? (\n                          <div className=\"arrow-up\" />\n                        ) : (\n                          <div className=\"arrow-down\" />\n                        )}\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                    <div className=\"heading-content\">\n                      <abbr\n                        className={`${\n                          window.innerWidth <= 769 ? \"is-gray\" : \"\"\n                        }`}\n                        title=\"Deaths\"\n                      >\n                        Deaths\n                      </abbr>\n                      <div\n                        style={{\n                          display:\n                            sortData.sortColumn === \"deaths\"\n                              ? \"initial\"\n                              : \"none\",\n                        }}\n                      >\n                        {sortData.isAscending ? (\n                          <div className=\"arrow-up\" />\n                        ) : (\n                          <div className=\"arrow-down\" />\n                        )}\n                      </div>\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {states.map((state, index) => {\n                  if (index !== 0 && state.confirmed > 0) {\n                    return (\n                      <Row\n                        key={index}\n                        index={index}\n                        state={state}\n                        total={false}\n                        reveal={revealedStates[state.state]}\n                        districts={\n                          state.state in districts\n                            ? districts[state.state].districtData\n                            : []\n                        }\n                        onHighlightState={props.onHighlightState}\n                        onHighlightDistrict={props.onHighlightDistrict}\n                        handleReveal={handleReveal}\n                      />\n                    );\n                  }\n                  return null;\n                })}\n              </tbody>\n\n              <tbody>\n                {states.length > 1 && props.summary === false && (\n                  <Row\n                    key={0}\n                    state={states[0]}\n                    total={true}\n                    onHighlightState={props.onHighlightState}\n                  />\n                )}\n              </tbody>\n            </Table1>\n            <h5\n              className=\"table-fineprint fadeInUp\"\n              style={{ animationDelay: \"1s\" }}\n            >\n              {count} States/UTS Affected\n            </h5>\n          </React.Fragment>\n        ) : null}\n      </>\n    );\n  } else {\n    return <div style={{ height: \"50rem\" }}></div>;\n  }\n};\n\nexport default Table;\n","import * as d3 from \"d3\";\n\nconst Legend = ({\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n} = {}) => {\n  const svg = d3\n    .create(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"viewBox\", [0, 0, width, height])\n    .style(\"overflow\", \"visible\")\n    .style(\"display\", \"block\");\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll(\".tick line\");\n    ticks.attr(\"y1\", marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .append(\"image\")\n      .attr(\"x\", marginLeft)\n      .attr(\"y\", marginTop)\n      .attr(\"width\", width - marginLeft - marginRight)\n      .attr(\"height\", height - marginTop - marginBottom)\n      .attr(\"preserveAspectRatio\", \"none\")\n      .attr(\n        \"xlink:href\",\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .append(\"image\")\n      .attr(\"x\", marginLeft)\n      .attr(\"y\", marginTop)\n      .attr(\"width\", width - marginLeft - marginRight)\n      .attr(\"height\", height - marginTop - marginBottom)\n      .attr(\"preserveAspectRatio\", \"none\")\n      .attr(\"xlink:href\", ramp(color.interpolator()).toDataURL());\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== \"function\") {\n        tickFormat = d3.format(tickFormat === undefined ? \",f\" : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === \"string\"\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append(\"g\")\n      .selectAll(\"rect\")\n      .data(color.range())\n      .join(\"rect\")\n      .attr(\"x\", (d, i) => x(i - 1))\n      .attr(\"y\", marginTop)\n      .attr(\"width\", (d, i) => x(i) - x(i - 1))\n      .attr(\"height\", height - marginTop - marginBottom)\n      .attr(\"fill\", (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + \"+\", i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    x = d3\n      .scaleBand()\n      .domain(color.domain())\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append(\"g\")\n      .selectAll(\"rect\")\n      .data(color.domain())\n      .join(\"rect\")\n      .attr(\"x\", x)\n      .attr(\"y\", marginTop)\n      .attr(\"width\", Math.max(0, x.bandwidth() - 1))\n      .attr(\"height\", height - marginTop - marginBottom)\n      .attr(\"fill\", color);\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .append(\"g\")\n    .attr(\"transform\", `translate(0,${height - marginBottom})`)\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === \"string\" ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === \"function\" ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .call(tickAdjust)\n    .call((g) => g.select(\".domain\").remove())\n    .call((g) =>\n      g\n        .append(\"text\")\n        .attr(\"x\", marginLeft)\n        .attr(\"y\", marginTop + marginBottom - height - 6)\n        .attr(\"fill\", \"currentColor\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"font-weight\", \"bold\")\n        .text(title)\n    );\n\n  return svg.node();\n};\n\nfunction ramp(color, n = 256) {\n  const canvas = document.createElement(\"canvas\");\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    \"2d\"\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n\nexport default Legend;\n\n// Source for ColorBar --> https://observablehq.com/@d3/color-legend\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\nimport { MAP_TYPES } from \"../Constants\";\nimport legend from \"./Legend\";\n\nconst propertyFieldMap = {\n  country: \"st_nm\",\n  state: \"district\",\n};\n\nconst ChoroplethMap = ({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n  setSelectedRegion,\n  isCountryLoaded,\n}) => {\n  const choroplethMap = useRef(null);\n  const choroplethLegend = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  // Ready Function to Draw the Map & Map Legend\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll(\"svg#chart > *\").remove();\n\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const svg = d3.select(choroplethMap.current);\n\n      //Map Topology - Lat & Long cordinates\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n      const projection = d3.geoMercator();\n\n      // Set size of map\n      let path;\n      let width;\n      let height;\n      if (!svg.attr(\"viewBox\")) {\n        const widthStyle = parseInt(svg.style(\"width\"));\n        if (isCountryLoaded) projection.fitWidth(widthStyle, topology);\n        else {\n          const heightStyle = parseInt(svg.style(\"height\"));\n          projection.fitSize([widthStyle, heightStyle], topology);\n        }\n        path = d3.geoPath(projection);\n        const bBox = path.bounds(topology);\n        width = +bBox[1][0];\n        height = +bBox[1][1];\n        svg.attr(\"viewBox\", `0 0 ${width} ${height}`);\n      }\n      const bBox = svg.attr(\"viewBox\").split(\" \");\n      width = +bBox[2];\n      height = +bBox[3];\n      projection.fitSize([width, height], topology);\n      path = d3.geoPath(projection);\n\n      /* LEGEND */\n      const svgLegend = d3.select(choroplethLegend.current);\n      svgLegend.selectAll(\"*\").remove();\n      const redInterpolator = (t) => d3.interpolateReds(t * 0.85);\n      const colorScale = d3.scaleSequential(\n        [0, statistic.maxConfirmed],\n        redInterpolator\n      );\n      // Colorbar\n      const widthLegend = parseInt(svgLegend.style(\"width\"));\n      const margin = { left: 0.02 * widthLegend, right: 0.02 * widthLegend };\n      const barWidth = widthLegend - margin.left - margin.right;\n      const heightLegend = +svgLegend.attr(\"height\");\n      svgLegend\n        .append(\"g\")\n        .style(\"transform\", `translateX(${margin.left}px)`)\n        .append(() =>\n          legend({\n            color: colorScale,\n            title: \"Confirmed Cases\",\n            width: barWidth,\n            height: 0.8 * heightLegend,\n            ticks: 6,\n            tickFormat: function (d, i, n) {\n              if (!Number.isInteger(d)) return;\n              if (i === n.length - 1) return d + \"+\";\n              return d;\n            },\n          })\n        );\n      svgLegend.attr(\"viewBox\", `0 0 ${widthLegend} ${heightLegend}`);\n\n      /* DRAW MAP */\n      let onceTouchedRegion = null;\n      const g = svg.append(\"g\").attr(\"class\", mapMeta.graphObjectName);\n      g.append(\"g\")\n        .attr(\"class\", \"states\")\n        .selectAll(\"path\")\n        .data(topology.features)\n        .join(\"path\")\n        .attr(\"class\", \"path-region\")\n        .attr(\"fill\", function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color = n === 0 ? \"#ffffff\" : colorScale(n);\n          return color;\n        })\n        .attr(\"d\", path)\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mouseover\", (d) => {\n          handleMouseover(d.properties[propertyField]);\n        })\n        .on(\"mouseleave\", (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on(\"touchstart\", (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on(\"click\", handleClick)\n        .style(\"cursor\", \"pointer\")\n        .append(\"title\")\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            Number(\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\n            ).toString() +\n            \"% from \" +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      g.append(\"path\")\n        .attr(\"class\", \"borders\")\n        .attr(\"stroke\", \"#ff073a20\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke-width\", 2)\n        .attr(\n          \"d\",\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n\n      const handleMouseover = (name) => {\n        try {\n          setSelectedRegion(name);\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log(\"err\", err);\n        }\n      };\n\n      function handleClick(d) {\n        d3.event.stopPropagation();\n        if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE) return;\n        changeMap(d.properties[propertyField]);\n      }\n\n      // Reset on tapping outside map\n      svg.on(\"click\", () => {\n        setSelectedRegion(null);\n        if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n          setHoveredRegion(\"Total\", mapMeta);\n      });\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n      setSelectedRegion,\n      isCountryLoaded,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(\" \");\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(\" \");\n  };\n\n  // Fetch Map Topology Data\n  useEffect(() => {\n    d3.json(mapMeta.geoDataFile).then((data) => {\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    });\n  }, [mapMeta.geoDataFile, statistic, ready]);\n\n  // Region Highlighted Function\n  const highlightRegionInMap = (name) => {\n    const paths = d3.selectAll(\".path-region\");\n    paths.classed(\"map-hover\", (d, i, nodes) => {\n      const propertyField =\n        \"district\" in d.properties\n          ? propertyFieldMap[\"state\"]\n          : propertyFieldMap[\"country\"];\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div>\n      <div className=\"svg-parent fadeInUp\" style={{ animationDelay: \"2.5s\" }}>\n        <svg\n          id=\"chart\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethMap}\n        ></svg>\n      </div>\n      <div\n        className=\"svg-parent legend fadeInUp\"\n        style={{ animationDelay: \"2.5s\" }}\n      >\n        <svg\n          id=\"legend\"\n          height=\"65\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethLegend}\n        ></svg>\n      </div>\n    </div>\n  );\n};\n\nexport default ChoroplethMap;\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport Choropleth from \"./Choropleth\";\nimport { MAP_TYPES, MAP_META } from \"../Constants\";\nimport {\n  formatDateIst,\n  formatDateAbsolute,\n  formatNumberSat,\n} from \"../utils/format\";\nimport { formatDistance, format, parse } from \"date-fns\";\nimport * as Icon from \"react-feather\";\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = { ...state };\n  if (!region.name) region.name = region.state;\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = { ...districtData };\n  if (!region.name) region.name = name;\n  return region;\n};\n\nconst MapExplorer = ({\n  forwardRef,\n  mapMeta,\n  states,\n  stateDistrictWiseData,\n  stateTestData,\n  regionHighlighted,\n  onMapHighlightChange,\n  isCountryLoaded,\n}) => {\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [panelRegion, setPanelRegion] = useState(getRegionFromState(states[0]));\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState(\n    getRegionFromState(states[0])\n  );\n  const [testObj, setTestObj] = useState({});\n  const [currentMap, setCurrentMap] = useState(mapMeta);\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = { total: 0, maxConfirmed: 0 };\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === \"Total\") {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || { districtData: {} }\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        // acc[district] = {\n        //   ...acc[district],\n        //   confirmed: districtWiseData[district].confirmed,\n        //   active: districtWiseData[district].active,\n        //   deaths: districtWiseData[district].deceased,\n        //   recovered: districtWiseData[district].recovered,\n        // };\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        const region = getRegionFromState(\n          states.find((state) => name === state.state)\n        );\n        setCurrentHoveredRegion(region);\n        setPanelRegion(region);\n        onMapHighlightChange(region);\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\n        const panelRegion = getRegionFromState(\n          states.find((state) => currentMap.name === state.state)\n        );\n        setPanelRegion(panelRegion);\n        if (onMapHighlightChange) onMapHighlightChange(panelRegion);\n      }\n    },\n    [states, stateDistrictWiseData, onMapHighlightChange]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined || regionHighlighted === null) return;\n\n    const isState = !(\"district\" in regionHighlighted);\n    if (isState) {\n      const newMap = MAP_META[\"India\"];\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setHoveredRegion(region.name, newMap);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = MAP_META[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, setHoveredRegion]);\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = MAP_META[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setSelectedRegion(null);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[0].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const { districtData } = stateDistrictWiseData[name] || {};\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== \"Unknown\")\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n        setSelectedRegion(topDistrict);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n\n  const { name, lastupdatedtime } = currentHoveredRegion;\n\n  useEffect(() => {\n    setTestObj(\n      stateTestData.find(\n        (obj) => obj.state === panelRegion.name && obj.totaltested !== \"\"\n      )\n    );\n  }, [panelRegion, stateTestData, testObj]);\n  return (\n    <div\n      className=\"MapExplorer fadeInUp\"\n      style={{ animationDelay: \"1.5s\" }}\n      ref={forwardRef}\n    >\n      <div className=\"header\">\n        <h1>{currentMap.name} Map</h1>\n        <h6>\n          {window.innerWidth <= 769 ? \"Tap\" : \"Hover\"} over a{\" \"}\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? \"state/UT\" : \"district\"}{\" \"}\n          for more details\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\" stats fadeInUp\" style={{ animationDelay: \"2s\" }}>\n          <h5>Confirmed</h5>\n          <div className=\"stats-bottom\" style={{ color: \"red\" }}>\n            <h1>{formatNumberSat(panelRegion.confirmed)}</h1>\n            <h6>{`+${formatNumberSat(panelRegion.deltaconfirmed)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\" stats is-blue fadeInUp\"\n          style={{ animationDelay: \"2.1s\" }}\n        >\n          <h5>Active</h5>\n          <div className=\"stats-bottom\" style={{ color: \"rgb(23,162,184)\" }}>\n            <h1>{formatNumberSat(panelRegion.active)}</h1>\n            <h6>{` `}</h6>\n          </div>\n        </div>\n\n        <div className=\" stats fadeInUp\" style={{ animationDelay: \"2.2s\" }}>\n          <h5>Recovered</h5>\n          <div className=\"stats-bottom\" style={{ color: \"green\" }}>\n            <h1>{formatNumberSat(panelRegion.recovered)}</h1>\n            <h6>{`+${formatNumberSat(panelRegion.deltarecovered)}`}</h6>\n          </div>\n        </div>\n\n        <div className=\"stats fadeInUp\" style={{ animationDelay: \"2.3s\" }}>\n          <h5>Deaths</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumberSat(panelRegion.deaths)}</h1>\n            <h6>{`+${formatNumberSat(panelRegion.deltadeaths)}`}</h6>\n          </div>\n        </div>\n\n        {\n          <div\n            className=\" stats tested fadeInUp\"\n            style={{ animationDelay: \"2.4s\" }}\n          >\n            <h5>Tested</h5>\n            <div\n              className=\"stats-bottom\"\n              style={{ color: \"rgba(32,26,162,.866667)\" }}\n            >\n              <h1>{formatNumberSat(testObj?.totaltested)}</h1>\n            </div>\n            <h6\n              className=\"timestamp\"\n              style={{ color: \"rgba(32,26,162,.866667)\" }}\n            >\n              {!isNaN(parse(testObj?.updatedon, \"dd/MM/yyyy\", new Date()))\n                ? `As of ${format(\n                    parse(testObj?.updatedon, \"dd/MM/yyyy\", new Date()),\n                    \"dd MMM\"\n                  )}`\n                : \"\"}\n            </h6>\n            {testObj?.totaltested?.length > 1 && (\n              <a href={testObj.source} target=\"_noblank\">\n                <Icon.Link />\n              </a>\n            )}\n          </div>\n        }\n      </div>\n      <div className=\"meta fadeInUp\" style={{ animationDelay: \"2.4s\" }}>\n        <h2>{name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? \"district-last-update\"\n                : \"state-last-update\"\n            }`}\n          >\n            <h6>Last updated</h6>\n            <h3\n              title={\n                isNaN(Date.parse(formatDateIst(lastupdatedtime)))\n                  ? \"\"\n                  : formatDateAbsolute(lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDateIst(lastupdatedtime)))\n                ? \"\"\n                : formatDistance(\n                    new Date(formatDateIst(lastupdatedtime)),\n                    new Date()\n                  ) + \" ago\"}\n            </h3>\n          </div>\n        )}\n        {/* {currentMap.mapType === MAP_TYPES.STATE &&\n          currentMapData[currentHoveredRegion.name] &&\n          console.log(currentMapData[currentHoveredRegion.name])} */}\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentHoveredRegion.name !== currentMap.name ? (\n          <h1 className=\"district-confirmed\">\n            {currentMapData[currentHoveredRegion.name]\n              ? // ? currentMapData[currentHoveredRegion.name][\"confirmed\"]\n                currentMapData[currentHoveredRegion.name]\n              : 0}\n            <br />\n            <span style={{ fontSize: \"0.75rem\", fontWeight: 600 }}>\n              confirmed\n            </span>\n          </h1>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState(\"India\")}\n          >\n            Back\n          </div>\n        ) : null}\n      </div>\n      <Choropleth\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n        setSelectedRegion={setSelectedRegion}\n        isCountryLoaded={isCountryLoaded}\n      />\n    </div>\n  );\n};\n\nexport default MapExplorer;\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport * as d3 from \"d3\";\nimport moment from \"moment\";\nimport { useResizeObserver } from \"../utils/hooks\";\nimport { formatNumberSat, sliceTimeseriesFromEnd } from \"../utils/format\";\n\nfunction TimeSeries(props) {\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const transformTimeSeries = useCallback(\n    (timeseries) => {\n      if (timeseries.length > 1) {\n        const slicedTimeseries = sliceTimeseriesFromEnd(\n          timeseries,\n          lastDaysCount\n        );\n        setIndex(slicedTimeseries.length - 1);\n        setTimeseries(slicedTimeseries);\n      }\n    },\n    [lastDaysCount]\n  );\n\n  useEffect(() => {\n    transformTimeSeries(props.timeseries);\n  }, [props.timeseries, lastDaysCount, transformTimeSeries]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = { top: 15, right: 35, bottom: 25, left: 25 };\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = timeseries.length;\n      const yBuffer = 1.1;\n\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n      const svg4 = d3.select(svgRef4.current);\n\n      const dateMin = new Date(timeseries[0][\"date\"]);\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(timeseries[T - 1][\"date\"]);\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g, yScale) =>\n        g\n          .attr(\"class\", \"x-axis\")\n          .call(d3.axisBottom(xScale).ticks(numTicksX))\n          .style(\"transform\", `translateY(${yScale(0)}px)`);\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr(\"class\", \"y-axis\")\n          .call(d3.axisRight(yScale).ticks(4, \"0~s\").tickPadding(5))\n          .style(\"transform\", `translateX(${chartRight}px)`);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3, svg4];\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        \"totalconfirmed\",\n        \"totalactive\",\n        \"totalrecovered\",\n        \"totaldeceased\",\n      ];\n      const dataTypesDaily = [\n        \"dailyconfirmed\",\n        \"dailyactive\",\n        \"dailyrecovered\",\n        \"dailydeceased\",\n      ];\n\n      const colors = [\"#ff073a\", \"#007bff\", \"#28a745\", \"#6c757d\"];\n\n      let yScales;\n      if (plotTotal) {\n        let uniformScaleMin = Infinity;\n        dataTypesTotal.forEach((type) => {\n          uniformScaleMin = Math.min(\n            uniformScaleMin,\n            d3.min(timeseries, (d) => d[type])\n          );\n        });\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            uniformScaleMin,\n            Math.max(1, yBuffer * d3.max(timeseries, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(1, yBuffer * d3.max(timeseries, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(timeseries, (d) => d[type]),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(timeseries, (d) => d[type])\n              ),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (logMode) return mode ? yScaleUniformLog : yScaleLog;\n          else return mode ? yScaleUniformLinear : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            Math.min(\n              0,\n              d3.min(timeseries, (d) => d.dailyactive)\n            ),\n            Math.max(\n              1,\n              yBuffer *\n                d3.max(timeseries, (d) =>\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n                )\n            ),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              Math.min(\n                0,\n                d3.min(timeseries, (d) => d[type])\n              ),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return mode ? yScaleDailyUniform : yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll(\".focus\")\n          .data([timeseries[T - 1]], (d) => d.date)\n          .join(\"circle\")\n          .attr(\"class\", \"focus\")\n          .attr(\"fill\", colors[i])\n          .attr(\"stroke\", colors[i])\n          .attr(\"r\", 3);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(timeseries, date, 1);\n        if (0 <= i && i < T) {\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\n          setDatapoint(timeseries[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = timeseries[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            f.attr(\"cx\", xScale(d.date)).attr(\"cy\", yScale(d[type]));\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(timeseries[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          f.attr(\"cx\", xScale(timeseries[T - 1].date)).attr(\n            \"cy\",\n            yScale(timeseries[T - 1][type])\n          );\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const color = colors[i];\n        const yScale = yScales[i];\n\n        /* X axis */\n        svg.select(\".x-axis\").transition(t).call(xAxis, yScale);\n        /* Y axis */\n        svg.select(\".y-axis\").transition(t).call(yAxis, yScale);\n\n        /* Path dots */\n        svg\n          .selectAll(\".dot\")\n          .data(timeseries, (d) => d.date)\n          .join((enter) => enter.append(\"circle\").attr(\"cy\", chartBottom))\n          .attr(\"class\", \"dot\")\n          .attr(\"fill\", color)\n          .attr(\"stroke\", color)\n          .attr(\"r\", 1.5)\n          .transition(t)\n          .attr(\"cx\", (d) => xScale(d.date))\n          .attr(\"cy\", (d) => yScale(d[type]));\n\n        focus[i]\n          .transition(t)\n          .attr(\"cx\", (d) => xScale(d.date))\n          .attr(\"cy\", (d) => yScale(d[type]));\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll(\".stem\").remove();\n          const path = svg\n            .selectAll(\".trend\")\n            .data([[...timeseries].reverse()])\n            .join(\"path\")\n            .attr(\"class\", \"trend\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", color + \"99\")\n            .attr(\"stroke-width\", 2);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr(\"d\")) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              \"d\",\n              () => path.attr(\"d\") + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr(\"opacity\", plotTotal ? 1 : 0)\n            .attr(\n              \"d\",\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll(\".trend\").remove();\n          svg\n            .selectAll(\".stem\")\n            .data(timeseries, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append(\"line\")\n                .attr(\"x1\", (d) => xScale(d.date))\n                .attr(\"x2\", (d) => xScale(d.date))\n                .attr(\"y1\", chartBottom)\n                .attr(\"y2\", chartBottom)\n            )\n            .attr(\"class\", \"stem\")\n            .style(\"stroke\", color + \"99\")\n            .style(\"stroke-width\", 4)\n            .transition(t)\n            .attr(\"y1\", yScale(0))\n            .attr(\"x1\", (d) => xScale(d.date))\n            .attr(\"x2\", (d) => xScale(d.date))\n            .attr(\"y2\", (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on(\"mousemove\", mousemove)\n          .on(\"touchmove\", mousemove)\n          .on(\"mouseout\", mouseout)\n          .on(\"touchend\", mouseout);\n      });\n    },\n    [dimensions, chartType, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const focusDate = moment(datapoint.date);\n  let dateStr = focusDate.format(\"DD MMMM\");\n  dateStr += focusDate.isSame(moment().subtract(1, \"days\"), \"day\")\n    ? \" Yesterday\"\n    : \"\";\n\n  const chartKey1 = chartType === 1 ? \"totalconfirmed\" : \"dailyconfirmed\";\n  const chartKey2 = chartType === 1 ? \"totalactive\" : \"dailyactive\";\n  const chartKey3 = chartType === 1 ? \"totalrecovered\" : \"dailyrecovered\";\n  const chartKey4 = chartType === 1 ? \"totaldeceased\" : \"dailydeceased\";\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\n      return \"\";\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumberSat(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <div\n      className=\"TimeSeries-Parent fadeInUp\"\n      style={{ animationDelay: \"2.7s\" }}\n    >\n      <div className=\"timeseries\">\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? \"title\" : \"\"}`}>Confirmed</h5>\n            <h5 className={`${moving ? \"title\" : \"\"}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumberSat(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-blue\">\n          <div className=\"stats is-blue\">\n            <h5 className={`${!moving ? \"title\" : \"\"}`}>Active</h5>\n            <h5 className={`${moving ? \"title\" : \"\"}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumberSat(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? \"title\" : \"\"}`}>Recovered</h5>\n            <h5 className={`${moving ? \"title\" : \"\"}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumberSat(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? \"title\" : \"\"}`}>Deaths</h5>\n            <h5 className={`${moving ? \"title\" : \"\"}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumberSat(datapoint[chartKey4])}</h2>\n              <h6>{currentStatusCount(chartKey4)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? \"selected\" : \"\"}\n        >\n          Beginning\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? \"selected\" : \"\"}\n          aria-label=\"1 month\"\n        >\n          1 Month\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? \"selected\" : \"\"}\n          aria-label=\"14 days\"\n        >\n          2 Weeks\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSeries;\n","import { useState, useEffect } from \"react\";\nimport { ResizeObserver } from \"@juggle/resize-observer\";\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { formatDistance } from \"date-fns\";\nimport TodayStatus from \"./TodayStatus\";\nimport TotalConfirmedChart from \"./Charts/TotalConfirmedChart\";\nimport DailyConfirmedChart from \"./Charts/DailyConfirmedChart\";\nimport DeepDive from \"./Charts/DeepDive\";\nimport Table from \"./Table\";\nimport Loader from \"./Loader\";\nimport MapExplorer from \"./MapExplorer\";\nimport { MAP_META } from \"../Constants\";\nimport TimeSeries from \"./TimeSeries\";\nimport {\n  formatNumber,\n  formatDateIst,\n  formatDateAbsolute,\n  parseStateTimeseries,\n  preprocessTimeseries,\n} from \"../utils/format\";\n\nconst IndianCase = (props) => {\n  const [fetched, setFetched] = useState(false);\n\n  // Country State - India (Confirmed. Active, Deaths, Recovered)\n  const [confirmed, setconfirmed] = useState(null);\n  const [deaths, setdeaths] = useState(null);\n  const [recovered, setrecovered] = useState(null);\n  const [active, setactive] = useState(null);\n  const [lastupdate, setlastupdate] = useState(null);\n\n  // Today status (Today - Confirmed, Recovered)\n  const [todayCases, settodayCases] = useState(null);\n  const [todayRecovered, settodayRecovered] = useState(null);\n\n  // TotalConfirmedChart & DailyConfirmedChart\n  const [timeseries, setTimeseries] = useState([]);\n  const [timeseries1, setTimeseries1] = useState([]);\n\n  // StatewiseTable (State & Districwise Data)\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  const [states, setStates] = useState([]);\n\n  // State for Map Explorer\n  const [stateTestData, setStateTestData] = useState({});\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n\n  //State Daily time-series Data\n  const [activeStateCode, setActiveStateCode] = useState(\"TT\"); // TT -> India\n\n  // States for TimeSeries\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [graphOption, setGraphOption] = useState(1);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        { data },\n        stateDistrictWiseResponse,\n        { data: statesDailyResponse },\n        { data: stateTestData },\n      ] = await Promise.all([\n        axios.get(\"https://api.covid19india.org/data.json\"),\n        axios.get(\"https://api.covid19india.org/state_district_wise.json\"),\n        axios.get(\"https://api.covid19india.org/states_daily.json\"),\n        axios.get(\"https://api.covid19india.org/state_test_data.json\"),\n      ]);\n      // Country State - India (Confirmed. Active, Deaths, Recovered)\n      setconfirmed(formatNumber(data.statewise[0].confirmed));\n      setdeaths(formatNumber(data.statewise[0].deaths));\n      setrecovered(formatNumber(data.statewise[0].recovered));\n      const activeCase =\n        parseInt(data.statewise[0].confirmed) -\n        (parseInt(data.statewise[0].deaths) +\n          parseInt(data.statewise[0].recovered));\n      setactive(formatNumber(activeCase));\n      setlastupdate(data.statewise[0].lastupdatedtime);\n\n      // Today status (Today - Confirmed, Recovered)\n      settodayCases(data.statewise[0].deltaconfirmed);\n      settodayRecovered(data.statewise[0].deltarecovered);\n\n      // TotalConfirmedChart & DailyConfirmedChart\n      setTimeseries1(data.cases_time_series);\n\n      // StatewiseTable (State & Districwise Data)\n      setStates(data.statewise);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n\n      // State for MapExplorer\n      const testData = stateTestData.states_tested_data.reverse();\n      const totalTest = data.tested[data.tested.length - 1];\n      testData.push({\n        updatedon: totalTest.updatetimestamp.split(\" \")[0],\n        totaltested: totalTest.totalindividualstested,\n        source: totalTest.source,\n        state: \"Total\", // India\n      });\n      setStateTestData(testData);\n\n      setStates(data.statewise);\n      const ts = parseStateTimeseries(statesDailyResponse);\n      ts[\"TT\"] = preprocessTimeseries(data.cases_time_series); // TT -> India\n      setTimeseries(ts);\n\n      // setStatesTimeSeries(stateDailyResponse.data.states_daily);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) return setRegionHighlighted(null);\n    setRegionHighlighted({ state, index });\n  };\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({ district, state, index });\n  };\n\n  const onMapHighlightChange = useCallback(({ statecode }) => {\n    setActiveStateCode(statecode);\n  }, []);\n\n  const refs = [useRef(), useRef(), useRef()];\n\n  return (\n    <>\n      {!confirmed ? (\n        <Loader />\n      ) : (\n        <>\n          <section className=\"center-text fadeInUp indian-case\">\n            <div className=\"global-case \">\n              <h2 className=\"title\">Country Case: India</h2>\n              <span\n                className=\"data-time\"\n                style={{ textTransform: \"uppercase\" }}\n              >\n                Last Updated: {lastupdate ? formatDateAbsolute(lastupdate) : \"\"}\n                {\" - \"}\n                {lastupdate\n                  ? formatDistance(\n                      new Date(formatDateIst(lastupdate)),\n                      new Date()\n                    ) + \" Ago\"\n                  : \"\"}\n              </span>\n            </div>\n            <div className=\"data-container\">\n              <div className=\"global-data\">\n                <div>\n                  <h4>\n                    {window.innerWidth < 485 ? \"Confirmed\" : \"Total Confirmed\"}\n                  </h4>\n                  <h2 style={{ color: \"red\" }}>{confirmed}</h2>\n                </div>\n              </div>\n              <div className=\"global-data\">\n                <div>\n                  <h4>Active Cases</h4>\n                  <h2 style={{ color: \"#17a2b8\" }}>{active}</h2>\n                </div>\n              </div>\n              <div className=\"global-data\">\n                <div>\n                  <h4>Deaths</h4>\n                  <h2>{deaths}</h2>\n                </div>\n              </div>\n              <div className=\"global-data\">\n                <div>\n                  <h4>Recovered</h4>\n                  <h2 style={{ color: \"green\" }}>{recovered}</h2>\n                </div>\n              </div>\n            </div>\n            <TodayStatus\n              dailyData={[{ todayCases, todayRecovered, lastupdate }]}\n            />\n            <div className=\"cards-container\">\n              <section className=\"cards\">\n                <div\n                  className=\"card fadeInUp\"\n                  style={{ animationDelay: \"0.7s\" }}\n                >\n                  <TotalConfirmedChart\n                    title=\"India - Total Cases\"\n                    timeseries={timeseries1}\n                  />\n                </div>\n                <div\n                  className=\"card fadeInUp\"\n                  style={{ animationDelay: \"0.7s\" }}\n                >\n                  <DailyConfirmedChart\n                    title=\"India - Daily Cases\"\n                    timeseries={timeseries1}\n                  />\n                </div>\n                <DeepDive />\n              </section>\n            </div>\n          </section>\n          <div>\n            <Table\n              forwardRef={refs[0]}\n              states={states}\n              summary={false}\n              stateDistrictWiseData={stateDistrictWiseData}\n              onHighlightState={onHighlightState}\n              onHighlightDistrict={onHighlightDistrict}\n            />\n            {fetched && (\n              <div className=\"mapdata-container\">\n                <MapExplorer\n                  forwardRef={refs[1]}\n                  mapMeta={MAP_META.India}\n                  states={states}\n                  stateDistrictWiseData={stateDistrictWiseData}\n                  stateTestData={stateTestData}\n                  regionHighlighted={regionHighlighted}\n                  onMapHighlightChange={onMapHighlightChange}\n                  isCountryLoaded={true}\n                />\n                <div\n                  className=\"timeseries-header fadeInUp\"\n                  style={{ animationDelay: \"2.5s\" }}\n                  ref={refs[2]}\n                >\n                  <h1>Spread Trends</h1>\n                  <div className=\"tabs\">\n                    <div\n                      className={`tab ${graphOption === 1 ? \"focused\" : \"\"}`}\n                      onClick={() => {\n                        setGraphOption(1);\n                      }}\n                    >\n                      <h4>Cumulative</h4>\n                    </div>\n                    <div\n                      className={`tab ${graphOption === 2 ? \"focused\" : \"\"}`}\n                      onClick={() => {\n                        setGraphOption(2);\n                      }}\n                    >\n                      <h4>Daily</h4>\n                    </div>\n                  </div>\n                  <div className=\"scale-modes\">\n                    <label className=\"main\">Scale Modes:</label>\n                    <div className=\"timeseries-mode\">\n                      <label htmlFor=\"timeseries-mode\">Uniform</label>\n                      <input\n                        id=\"timeseries-mode\"\n                        type=\"checkbox\"\n                        checked={timeseriesMode}\n                        className=\"switch\"\n                        aria-label=\"Checked by default to scale uniformly.\"\n                        onChange={(event) => {\n                          setTimeseriesMode(!timeseriesMode);\n                        }}\n                      />\n                    </div>\n                    <div\n                      className={`timeseries-logmode ${\n                        graphOption !== 1 ? \"disabled\" : \"\"\n                      }`}\n                    >\n                      <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\n                      <input\n                        id=\"timeseries-logmode\"\n                        type=\"checkbox\"\n                        checked={graphOption === 1 && timeseriesLogMode}\n                        className=\"switch\"\n                        disabled={graphOption !== 1}\n                        onChange={(event) => {\n                          setTimeseriesLogMode(!timeseriesLogMode);\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"trends-state-name\">\n                    <select\n                      value={activeStateCode}\n                      onChange={({ target }) => {\n                        const selectedState = target.selectedOptions[0].getAttribute(\n                          \"statedata\"\n                        );\n                        onHighlightState(JSON.parse(selectedState));\n                      }}\n                    >\n                      {states.map((s) => {\n                        return (\n                          <option\n                            value={s.statecode}\n                            key={s.statecode}\n                            statedata={JSON.stringify(s)}\n                          >\n                            {s.state === \"Total\" ? \"All States\" : s.state}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                  <TimeSeries\n                    timeseries={timeseries[activeStateCode]}\n                    type={graphOption}\n                    mode={timeseriesMode}\n                    logMode={timeseriesLogMode}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default IndianCase;\n","import React from \"react\";\nimport { Accordion, Button, Card, Container } from \"react-bootstrap\";\n\nconst Symptoms = () => {\n  return (\n    <Container\n      className=\"symptoms fadeInUp\"\n      style={{ animationDuration: \"2s\" }}\n    >\n      <Accordion defaultActiveKey=\"0\">\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n            <center>\n              <strong>COVID-19 Symptoms</strong>\n            </center>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              Coronavirus disease (COVID-19) is an infectious disease caused by\n              a newly discovered coronavirus. <br></br>\n              <br></br>\n              Most people infected with the COVID-19 virus will experience mild\n              to moderate respiratory illness and recover without requiring\n              special treatment. Older people, and those with underlying medical\n              problems like cardiovascular disease, diabetes, chronic\n              respiratory disease, and cancer are more likely to develop serious\n              illness.<br></br>\n              <br></br>\n              <strong>\n                The best way to prevent and slow down transmission\n              </strong>{\" \"}\n              is be well informed about the COVID-19 virus, the disease it\n              causes and how it spreads. Protect yourself and others from\n              infection by{\" \"}\n              <strong>\n                washing your hands or using an alcohol based rub frequently\n              </strong>{\" \"}\n              and <strong>not touching your face.</strong>\n              <br></br>\n              <br></br>People may be sick with the virus for 1 to 14 days before\n              developing symptoms.\n              <p>\n                The most common symptoms of coronavirus disease (COVID-19) are:\n              </p>\n              <ul>\n                <li>\n                  <strong>fever</strong>\n                </li>\n                <li>\n                  <strong>dry cough</strong>\n                </li>\n                <li>\n                  <strong>tiredness</strong>\n                </li>\n                <li>\n                  <strong>difficulty breathing (severe cases)</strong>\n                </li>\n              </ul>\n              <p>The COVID-19 virus spreads primarily through:</p>\n              <ul>\n                <li>\n                  <strong>droplets of saliva</strong>\n                </li>\n                <li>\n                  <strong>\n                    discharge from the nose when an infected person coughs or\n                    sneezes\n                  </strong>\n                </li>\n              </ul>\n              so it’s important that you also practice respiratory etiquette\n              (for example, by coughing into a flexed elbow). Most people (about\n              80%) recover from the disease without needing special treatment.\n              <br></br>\n              <br></br>\n              More rarely, the disease can be serious and even fatal. Older\n              people, and people with other medical conditions (such as asthma,\n              diabetes, or heart disease), may be more vulnerable to becoming\n              severely ill.<br></br>\n              <br></br>\n              <Button\n                variant=\"outline-info\"\n                href=\"https://www.who.int/health-topics/coronavirus#tab=tab_1\"\n              >\n                Click here to learn more\n              </Button>\n              <br></br>\n              <br></br>You can relieve your symptoms if you: <br></br>\n              <ul>\n                <li>rest and sleep</li>\n                <li>keep warm</li>\n                <li>drink plenty of liquids</li>\n                <li>\n                  use a room humidifier or take a hot shower to help ease a sore\n                  throat and cough\n                </li>\n              </ul>\n              If you develop a fever, cough, and have difficulty breathing,\n              promptly seek medical care. Call in advance and tell your health\n              provider of any recent travel or recent contact with travelers.\n              <br></br>\n              <br></br>\n              <Button\n                variant=\"outline-danger\"\n                href=\"https://www.who.int/news-room/q-a-detail/q-a-coronaviruses#:~:text=protect\"\n              >\n                Click here to learn more\n              </Button>\n              <br></br>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n      <br></br>\n    </Container>\n  );\n};\n\nexport default Symptoms;\n","import React, { useState, useEffect } from \"react\";\nimport Loader from \"./Loader\";\nimport axios from \"axios\";\nconst initialState = {\n  articles: [],\n  isLogged: false,\n};\nconst NewsHighlights = () => {\n  const [state, setstate] = useState(initialState);\n\n  useEffect(() => {\n    axios(\n      \"https://newsapi.org/v2/top-headlines?country=in&q=COVID&sortBy=popularity&apiKey=69e933747fdd4df4acc48c6fe3aba846&pageSize=9\"\n    )\n      .then(({ data }) =>\n        setstate({\n          articles: data.articles,\n          isLogged: true,\n          error: \"\",\n        })\n      )\n      .catch(\n        setstate({\n          isLogged: false,\n          articles: [],\n        })\n      );\n\n    return () => {};\n  }, []);\n  return (\n    <>\n      <div className=\"title\">\n        <h4 className=\"btn btn-outline-secondary\">\n          News Headlines from NewsAPI\n        </h4>\n      </div>\n      {state.isLogged ? (\n        <section className=\"news-container fadeInUp\">\n          {state.articles.map((item, idx) => (\n            <ul key={idx}>\n              <img src={item.urlToImage} alt=\"\" />\n              <h4>{item.title}</h4>\n              <p>{item.description}</p>\n              <a href={item.url} className=\"btn\">\n                Read More\n              </a>\n            </ul>\n          ))}\n        </section>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nexport default NewsHighlights;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, ButtonGroup, Nav } from \"react-bootstrap\";\nimport {\n  faGithub,\n  faTwitter,\n  faLinkedin\n} from \"@fortawesome/free-brands-svg-icons\";\nconst Footer = () => {\n  return (\n    <div className=\"footer-container\">\n      <Nav className=\"justify-content-center footer nav-bar\" activeKey=\"/home\">\n        <ButtonGroup aria-label=\"Social Media Icons\" className=\"social\">\n          <Button\n            variant=\"secondary\"\n            href=\"https://github.com/SAT853\"\n            className=\"m-2\"\n          >\n            <FontAwesomeIcon icon={faGithub} />{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"secondary\"\n            href=\"https://twitter.com/sathishrpsg671\"\n            className=\"m-2\"\n            style={{ background: \" #1da1f2\", border: \"none\" }}\n          >\n            <FontAwesomeIcon icon={faTwitter} />{\" \"}\n          </Button>{\" \"}\n          <Button\n            href=\"https://www.linkedin.com/in/sathishkumar-raja\"\n            variant=\"secondary\"\n            className=\"m-2\"\n            style={{ background: \"#0e76a8\", border: \"none\" }}\n          >\n            <FontAwesomeIcon icon={faLinkedin} />{\" \"}\n          </Button>{\" \"}\n        </ButtonGroup>\n      </Nav>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { CircleArrow as ScrollUpButton } from \"react-scroll-up-button\";\nconst ScrollButton = () => {\n  return (\n    <div>\n      <ScrollUpButton\n        EasingType=\"easeInQuad\"\n        ShowAtPosition={100}\n        AnimationDuration={1000}\n      />\n    </div>\n  );\n};\n\nexport default ScrollButton;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport Header from \"./Components/Header\";\nimport GlobalCase from \"./Components/GlobalCase\";\nimport IndianCase from \"./Components/IndianCase\";\nimport Symptoms from \"./Components/Symptoms\";\nimport NewsHighlights from \"./Components/NewsHighlights\";\nimport Footer from \"./Components/Footer\";\nimport ScrollButton from \"./Components/ScrollButton\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <>\n      <Provider store={store}>\n        <div className=\"container\">\n          <Header />\n          <GlobalCase />\n          <IndianCase />\n          <Symptoms />\n          <NewsHighlights />\n          <ScrollButton />\n          <Footer />\n        </div>\n      </Provider>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}